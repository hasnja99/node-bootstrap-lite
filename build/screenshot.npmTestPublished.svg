<svg height="20974" width="720" xmlns="http://www.w3.org/2000/svg">
<rect height="20974" fill="#555" width="720"></rect>
<text fill="#7f7" font-family="Courier New" font-size="12" xml:space="preserve">
<tspan x="10" y="26"></tspan>

<tspan x="10" y="42">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-01-20T21:40:12.115Z - npm-testing /tmp/npmTe\</tspan>
<tspan x="10" y="58">stPublished/node_modules/bootstrap-lite</tspan>

<tspan x="10" y="74"></tspan>

<tspan x="10" y="90"></tspan>

<tspan x="10" y="106">covering $ /home/travis/.nvm/versions/node/v13.6.0/bin/node /tmp/npmTestPublished/node_modules/b\</tspan>
<tspan x="10" y="122">ootstrap-lite/test.js</tspan>

<tspan x="10" y="138">&gt; jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/example.js</tspan>

<tspan x="10" y="154">  1 Unexpected space between ']' and '.'. // line 1185, column 1</tspan>

<tspan x="10" y="170">    .replace((</tspan>

<tspan x="10" y="186">{</tspan>

<tspan x="10" y="202">    "name": "JSLintError",</tspan>

<tspan x="10" y="218">    "column": 1,</tspan>

<tspan x="10" y="234">    "line": 1185,</tspan>

<tspan x="10" y="250">    "code": "unexpected_space_a_b",</tspan>

<tspan x="10" y="266">    "a": "]",</tspan>

<tspan x="10" y="282">    "b": ".",</tspan>

<tspan x="10" y="298">    "message": "Unexpected space between ']' and '.'.",</tspan>

<tspan x="10" y="314">    "source": ".replace((",</tspan>

<tspan x="10" y="330">    "ignore": null,</tspan>

<tspan x="10" y="346">    "evidence": ".replace(("</tspan>

<tspan x="10" y="362">}</tspan>

<tspan x="10" y="378">Error</tspan>

<tspan x="10" y="394">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="410">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="426">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="442">nt.js:11961:12)</tspan>

<tspan x="10" y="458">    at warn (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.\</tspan>
<tspan x="10" y="474">js:11983:29)</tspan>

<tspan x="10" y="490">    at no_space_only (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="506">b.jslint.js:16047:13)</tspan>

<tspan x="10" y="522">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:162\</tspan>
<tspan x="10" y="538">52:25</tspan>

<tspan x="10" y="554">    at Array.forEach (&lt;anonymous&gt;)</tspan>

<tspan x="10" y="570">    at whitage (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="586">nt.js:16116:12)</tspan>

<tspan x="10" y="602">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:164\</tspan>
<tspan x="10" y="618">30:21</tspan>

<tspan x="10" y="634">    at Object.jslint_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utili\</tspan>
<tspan x="10" y="650">ty2/lib.jslint.js:16498:21)</tspan>

<tspan x="10" y="666">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="682">es/utility2/lib.jslint.js:16814:38)</tspan>

<tspan x="10" y="698">http-server listening on port 53632</tspan>

<tspan x="10" y="714">testRunDefault - 14 ms - [node test-case 1 of 7 passed] - testCase_buildApidoc_default</tspan>

<tspan x="10" y="730">jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md.&lt;```javascript&gt;.js</tspan>

<tspan x="10" y="746">  1 Line is longer than 80 characters. // line 1184, column 81</tspan>

<tspan x="10" y="762">    local.assetsDict["/"] = local.assetsDict["/assets.index.template.html"].repl</tspan>

<tspan x="10" y="778">{</tspan>

<tspan x="10" y="794">    "name": "JSLintError",</tspan>

<tspan x="10" y="810">    "column": 81,</tspan>

<tspan x="10" y="826">    "line": 1184,</tspan>

<tspan x="10" y="842">    "code": "too_long",</tspan>

<tspan x="10" y="858">    "message": "Line is longer than 80 characters.",</tspan>

<tspan x="10" y="874">    "source": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].repla\</tspan>
<tspan x="10" y="890">ce((",</tspan>

<tspan x="10" y="906">    "ignore": null,</tspan>

<tspan x="10" y="922">    "a": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].replace(("\</tspan>
<tspan x="10" y="938">,</tspan>

<tspan x="10" y="954">    "evidence": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].rep\</tspan>
<tspan x="10" y="970">lace(("</tspan>

<tspan x="10" y="986">}</tspan>

<tspan x="10" y="1002">Error</tspan>

<tspan x="10" y="1018">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="1034">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="1050">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="1066">nt.js:11961:12)</tspan>

<tspan x="10" y="1082">    at next_line (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.js\</tspan>
<tspan x="10" y="1098">lint.js:12066:13)</tspan>

<tspan x="10" y="1114">    at lex (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.j\</tspan>
<tspan x="10" y="1130">s:12732:27)</tspan>

<tspan x="10" y="1146">    at tokenize (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsl\</tspan>
<tspan x="10" y="1162">int.js:12981:13)</tspan>

<tspan x="10" y="1178">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:163\</tspan>
<tspan x="10" y="1194">97:9</tspan>

<tspan x="10" y="1210">    at Object.jslint_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utili\</tspan>
<tspan x="10" y="1226">ty2/lib.jslint.js:16498:21)</tspan>

<tspan x="10" y="1242">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1258">es/utility2/lib.jslint.js:16814:38)</tspan>

<tspan x="10" y="1274">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1290">es/utility2/lib.jslint.js:16949:18)</tspan>

<tspan x="10" y="1306">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1322">es/utility2/lib.jslint.js:16949:18)</tspan>

<tspan x="10" y="1338">testRunDefault - 105 ms - [node test-case 2 of 7 passed] - testCase_buildLib_default</tspan>

<tspan x="10" y="1354">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md.autofix.old	2020-01-20 21:40:12.\</tspan>
<tspan x="10" y="1370">690643997 +0000</tspan>

<tspan x="10" y="1386">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md	2020-01-20 21:40:12.718629998 +0\</tspan>
<tspan x="10" y="1402">000</tspan>

<tspan x="10" y="1418">@@ -47,14 +47,14 @@</tspan>

<tspan x="10" y="1434"> </tspan>

<tspan x="10" y="1450"> </tspan>

<tspan x="10" y="1466"> # documentation</tspan>

<tspan x="10" y="1482">-#### cli help</tspan>

<tspan x="10" y="1498">-![screenshot](https://kaizhu256.github.io/node-bootstrap-lite/build/screenshot.npmPackageCliHel\</tspan>
<tspan x="10" y="1514">p.svg)</tspan>

<tspan x="10" y="1530">-</tspan>

<tspan x="10" y="1546"> #### api doc</tspan>

<tspan x="10" y="1562"> - [https://kaizhu256.github.io/node-bootstrap-lite/build..beta..travis-ci.org/apidoc.html](http\</tspan>
<tspan x="10" y="1578">s://kaizhu256.github.io/node-bootstrap-lite/build..beta..travis-ci.org/apidoc.html)</tspan>

<tspan x="10" y="1594"> </tspan>

<tspan x="10" y="1610"> [![apidoc](https://kaizhu256.github.io/node-bootstrap-lite/build/screenshot.buildCi.browser.%25\</tspan>
<tspan x="10" y="1626">2Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-bootstrap-lite/build..bet\</tspan>
<tspan x="10" y="1642">a..travis-ci.org/apidoc.html)</tspan>

<tspan x="10" y="1658"> </tspan>

<tspan x="10" y="1674">+#### cli help</tspan>

<tspan x="10" y="1690">+![screenshot](https://kaizhu256.github.io/node-bootstrap-lite/build/screenshot.npmPackageCliHel\</tspan>
<tspan x="10" y="1706">p.svg)</tspan>

<tspan x="10" y="1722">+</tspan>

<tspan x="10" y="1738"> #### todo</tspan>

<tspan x="10" y="1754"> - improve apidoc with jquery-plugin documentation</tspan>

<tspan x="10" y="1770"> - none</tspan>

<tspan x="10" y="1786">@@ -107,99 +107,310 @@</tspan>

<tspan x="10" y="1802"> instruction</tspan>

<tspan x="10" y="1818">     1. save this script as example.js</tspan>

<tspan x="10" y="1834">     2. run shell-command:</tspan>

<tspan x="10" y="1850">-        $ npm install bootstrap-lite &amp;&amp; PORT=8081 node example.js</tspan>

<tspan x="10" y="1866">+        $ npm install bootstrap-lite &amp;&amp; \</tspan>

<tspan x="10" y="1882">+            PORT=8081 node example.js</tspan>

<tspan x="10" y="1898">     3. open a browser to http://127.0.0.1:8081 and play with web-demo</tspan>

<tspan x="10" y="1914">     4. edit this script to suit your needs</tspan>

<tspan x="10" y="1930"> */</tspan>

<tspan x="10" y="1946"> </tspan>

<tspan x="10" y="1962"> </tspan>

<tspan x="10" y="1978"> </tspan>

<tspan x="10" y="1994">-/* istanbul instrument in package bootstrap */</tspan>

<tspan x="10" y="2010">+// assets.utility2.header.js - start</tspan>

<tspan x="10" y="2026"> /* istanbul ignore next */</tspan>

<tspan x="10" y="2042"> /* jslint utility2:true */</tspan>

<tspan x="10" y="2058"> (function (globalThis) {</tspan>

<tspan x="10" y="2074">     "use strict";</tspan>

<tspan x="10" y="2090">-    var consoleError;</tspan>

<tspan x="10" y="2106">-    var local;</tspan>

<tspan x="10" y="2122">+    let ArrayPrototypeFlat;</tspan>

<tspan x="10" y="2138">+    let TextXxcoder;</tspan>

<tspan x="10" y="2154">+    let consoleError;</tspan>

<tspan x="10" y="2170">+    let debugName;</tspan>

<tspan x="10" y="2186">+    let local;</tspan>

<tspan x="10" y="2202">+    debugName = "debug" + String("Inline");</tspan>

<tspan x="10" y="2218">     // init globalThis</tspan>

<tspan x="10" y="2234">-    (function () {</tspan>

<tspan x="10" y="2250">-        try {</tspan>

<tspan x="10" y="2266">-            globalThis = Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="2282">-        } catch (ignore) {}</tspan>

<tspan x="10" y="2298">-    }());</tspan>

<tspan x="10" y="2314">-    globalThis.globalThis = globalThis;</tspan>

<tspan x="10" y="2330">+    globalThis.globalThis = globalThis.globalThis || globalThis;</tspan>

<tspan x="10" y="2346">     // init debug_inline</tspan>

<tspan x="10" y="2362">-    if (!globalThis["debugInline"]) {</tspan>

<tspan x="10" y="2378">+    if (!globalThis[debugName]) {</tspan>

<tspan x="10" y="2394">         consoleError = console.error;</tspan>

<tspan x="10" y="2410">-        globalThis["debugInline"] = function () {</tspan>

<tspan x="10" y="2426">+        globalThis[debugName] = function (...argList) {</tspan>

<tspan x="10" y="2442">         /*</tspan>

<tspan x="10" y="2458">-         * this function will both print &lt;arguments&gt; to stderr</tspan>

<tspan x="10" y="2474">-         * and return &lt;arguments&gt;[0]</tspan>

<tspan x="10" y="2490">+         * this function will both print &lt;argList&gt; to stderr</tspan>

<tspan x="10" y="2506">+         * and return &lt;argList&gt;[0]</tspan>

<tspan x="10" y="2522">          */</tspan>

<tspan x="10" y="2538">-            var argList;</tspan>

<tspan x="10" y="2554">-            argList = Array.from(arguments); // jslint ignore:line</tspan>

<tspan x="10" y="2570">-            // debug arguments</tspan>

<tspan x="10" y="2586">-            globalThis["debugInlineArguments"] = argList;</tspan>

<tspan x="10" y="2602">-            consoleError("\n\ndebugInline");</tspan>

<tspan x="10" y="2618">+            consoleError("\n\n" + debugName);</tspan>

<tspan x="10" y="2634">             consoleError.apply(console, argList);</tspan>

<tspan x="10" y="2650">             consoleError("\n");</tspan>

<tspan x="10" y="2666">             // return arg0 for inspection</tspan>

<tspan x="10" y="2682">             return argList[0];</tspan>

<tspan x="10" y="2698">         };</tspan>

<tspan x="10" y="2714">     }</tspan>

<tspan x="10" y="2730">+    // polyfill</tspan>

<tspan x="10" y="2746">+    ArrayPrototypeFlat = function (depth) {</tspan>

<tspan x="10" y="2762">+    /*</tspan>

<tspan x="10" y="2778">+     * this function will polyfill Array.prototype.flat</tspan>

<tspan x="10" y="2794">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="2810">+     */</tspan>

<tspan x="10" y="2826">+        depth = (</tspan>

<tspan x="10" y="2842">+            globalThis.isNaN(depth)</tspan>

<tspan x="10" y="2858">+            ? 1</tspan>

<tspan x="10" y="2874">+            : Number(depth)</tspan>

<tspan x="10" y="2890">+        );</tspan>

<tspan x="10" y="2906">+        if (!depth) {</tspan>

<tspan x="10" y="2922">+            return Array.prototype.slice.call(this);</tspan>

<tspan x="10" y="2938">+        }</tspan>

<tspan x="10" y="2954">+        return Array.prototype.reduce.call(this, function (acc, cur) {</tspan>

<tspan x="10" y="2970">+            if (Array.isArray(cur)) {</tspan>

<tspan x="10" y="2986">+                // recurse</tspan>

<tspan x="10" y="3002">+                acc.push.apply(acc, ArrayPrototypeFlat.call(cur, depth - 1));</tspan>

<tspan x="10" y="3018">+            } else {</tspan>

<tspan x="10" y="3034">+                acc.push(cur);</tspan>

<tspan x="10" y="3050">+            }</tspan>

<tspan x="10" y="3066">+            return acc;</tspan>

<tspan x="10" y="3082">+        }, []);</tspan>

<tspan x="10" y="3098">+    };</tspan>

<tspan x="10" y="3114">+    Array.prototype.flat = Array.prototype.flat || ArrayPrototypeFlat;</tspan>

<tspan x="10" y="3130">+    Array.prototype.flatMap = Array.prototype.flatMap || function flatMap(</tspan>

<tspan x="10" y="3146">+        ...argList</tspan>

<tspan x="10" y="3162">+    ) {</tspan>

<tspan x="10" y="3178">+    /*</tspan>

<tspan x="10" y="3194">+     * this function will polyfill Array.prototype.flatMap</tspan>

<tspan x="10" y="3210">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="3226">+     */</tspan>

<tspan x="10" y="3242">+        return this.map(...argList).flat();</tspan>

<tspan x="10" y="3258">+    };</tspan>

<tspan x="10" y="3274">+    String.prototype.trimEnd = (</tspan>

<tspan x="10" y="3290">+        String.prototype.trimEnd || String.prototype.trimRight</tspan>

<tspan x="10" y="3306">+    );</tspan>

<tspan x="10" y="3322">+    String.prototype.trimStart = (</tspan>

<tspan x="10" y="3338">+        String.prototype.trimStart || String.prototype.trimLeft</tspan>

<tspan x="10" y="3354">+    );</tspan>

<tspan x="10" y="3370">+    (function () {</tspan>

<tspan x="10" y="3386">+        try {</tspan>

<tspan x="10" y="3402">+            globalThis.TextDecoder = (</tspan>

<tspan x="10" y="3418">+                globalThis.TextDecoder || require("util").TextDecoder</tspan>

<tspan x="10" y="3434">+            );</tspan>

<tspan x="10" y="3450">+            globalThis.TextEncoder = (</tspan>

<tspan x="10" y="3466">+                globalThis.TextEncoder || require("util").TextEncoder</tspan>

<tspan x="10" y="3482">+            );</tspan>

<tspan x="10" y="3498">+        } catch (ignore) {}</tspan>

<tspan x="10" y="3514">+    }());</tspan>

<tspan x="10" y="3530">+    TextXxcoder = function () {</tspan>

<tspan x="10" y="3546">+    /*</tspan>

<tspan x="10" y="3562">+     * this function will polyfill TextDecoder/TextEncoder</tspan>

<tspan x="10" y="3578">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="3594">+     */</tspan>

<tspan x="10" y="3610">+        return;</tspan>

<tspan x="10" y="3626">+    };</tspan>

<tspan x="10" y="3642">+    TextXxcoder.prototype.decode = function (octets) {</tspan>

<tspan x="10" y="3658">+    /*</tspan>

<tspan x="10" y="3674">+     * this function will polyfill TextDecoder.prototype.decode</tspan>

<tspan x="10" y="3690">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="3706">+     */</tspan>

<tspan x="10" y="3722">+        let bytesNeeded;</tspan>

<tspan x="10" y="3738">+        let codePoint;</tspan>

<tspan x="10" y="3754">+        let ii;</tspan>

<tspan x="10" y="3770">+        let kk;</tspan>

<tspan x="10" y="3786">+        let octet;</tspan>

<tspan x="10" y="3802">+        let string;</tspan>

<tspan x="10" y="3818">+        string = "";</tspan>

<tspan x="10" y="3834">+        ii = 0;</tspan>

<tspan x="10" y="3850">+        while (ii &lt; octets.length) {</tspan>

<tspan x="10" y="3866">+            octet = octets[ii];</tspan>

<tspan x="10" y="3882">+            bytesNeeded = 0;</tspan>

<tspan x="10" y="3898">+            codePoint = 0;</tspan>

<tspan x="10" y="3914">+            if (octet &lt;= 0x7F) {</tspan>

<tspan x="10" y="3930">+                bytesNeeded = 0;</tspan>

<tspan x="10" y="3946">+                codePoint = octet &amp; 0xFF;</tspan>

<tspan x="10" y="3962">+            } else if (octet &lt;= 0xDF) {</tspan>

<tspan x="10" y="3978">+                bytesNeeded = 1;</tspan>

<tspan x="10" y="3994">+                codePoint = octet &amp; 0x1F;</tspan>

<tspan x="10" y="4010">+            } else if (octet &lt;= 0xEF) {</tspan>

<tspan x="10" y="4026">+                bytesNeeded = 2;</tspan>

<tspan x="10" y="4042">+                codePoint = octet &amp; 0x0F;</tspan>

<tspan x="10" y="4058">+            } else if (octet &lt;= 0xF4) {</tspan>

<tspan x="10" y="4074">+                bytesNeeded = 3;</tspan>

<tspan x="10" y="4090">+                codePoint = octet &amp; 0x07;</tspan>

<tspan x="10" y="4106">+            }</tspan>

<tspan x="10" y="4122">+            if (octets.length - ii - bytesNeeded &gt; 0) {</tspan>

<tspan x="10" y="4138">+                kk = 0;</tspan>

<tspan x="10" y="4154">+                while (kk &lt; bytesNeeded) {</tspan>

<tspan x="10" y="4170">+                    octet = octets[ii + kk + 1];</tspan>

<tspan x="10" y="4186">+                    codePoint = (codePoint &lt;&lt; 6) | (octet &amp; 0x3F);</tspan>

<tspan x="10" y="4202">+                    kk += 1;</tspan>

<tspan x="10" y="4218">+                }</tspan>

<tspan x="10" y="4234">+            } else {</tspan>

<tspan x="10" y="4250">+                codePoint = 0xFFFD;</tspan>

<tspan x="10" y="4266">+                bytesNeeded = octets.length - ii;</tspan>

<tspan x="10" y="4282">+            }</tspan>

<tspan x="10" y="4298">+            string += String.fromCodePoint(codePoint);</tspan>

<tspan x="10" y="4314">+            ii += bytesNeeded + 1;</tspan>

<tspan x="10" y="4330">+        }</tspan>

<tspan x="10" y="4346">+        return string;</tspan>

<tspan x="10" y="4362">+    };</tspan>

<tspan x="10" y="4378">+    TextXxcoder.prototype.encode = function (string) {</tspan>

<tspan x="10" y="4394">+    /*</tspan>

<tspan x="10" y="4410">+     * this function will polyfill TextEncoder.prototype.encode</tspan>

<tspan x="10" y="4426">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="4442">+     */</tspan>

<tspan x="10" y="4458">+        let bits;</tspan>

<tspan x="10" y="4474">+        let cc;</tspan>

<tspan x="10" y="4490">+        let codePoint;</tspan>

<tspan x="10" y="4506">+        let ii;</tspan>

<tspan x="10" y="4522">+        let length;</tspan>

<tspan x="10" y="4538">+        let octets;</tspan>

<tspan x="10" y="4554">+        octets = [];</tspan>

<tspan x="10" y="4570">+        length = string.length;</tspan>

<tspan x="10" y="4586">+        ii = 0;</tspan>

<tspan x="10" y="4602">+        while (ii &lt; length) {</tspan>

<tspan x="10" y="4618">+            codePoint = string.codePointAt(ii);</tspan>

<tspan x="10" y="4634">+            cc = 0;</tspan>

<tspan x="10" y="4650">+            bits = 0;</tspan>

<tspan x="10" y="4666">+            if (codePoint &lt;= 0x0000007F) {</tspan>

<tspan x="10" y="4682">+                cc = 0;</tspan>

<tspan x="10" y="4698">+                bits = 0x00;</tspan>

<tspan x="10" y="4714">+            } else if (codePoint &lt;= 0x000007FF) {</tspan>

<tspan x="10" y="4730">+                cc = 6;</tspan>

<tspan x="10" y="4746">+                bits = 0xC0;</tspan>

<tspan x="10" y="4762">+            } else if (codePoint &lt;= 0x0000FFFF) {</tspan>

<tspan x="10" y="4778">+                cc = 12;</tspan>

<tspan x="10" y="4794">+                bits = 0xE0;</tspan>

<tspan x="10" y="4810">+            } else if (codePoint &lt;= 0x001FFFFF) {</tspan>

<tspan x="10" y="4826">+                cc = 18;</tspan>

<tspan x="10" y="4842">+                bits = 0xF0;</tspan>

<tspan x="10" y="4858">+            }</tspan>

<tspan x="10" y="4874">+            octets.push(bits | (codePoint &gt;&gt; cc));</tspan>

<tspan x="10" y="4890">+            cc -= 6;</tspan>

<tspan x="10" y="4906">+            while (cc &gt;= 0) {</tspan>

<tspan x="10" y="4922">+                octets.push(0x80 | ((codePoint &gt;&gt; cc) &amp; 0x3F));</tspan>

<tspan x="10" y="4938">+                cc -= 6;</tspan>

<tspan x="10" y="4954">+            }</tspan>

<tspan x="10" y="4970">+            ii += (</tspan>

<tspan x="10" y="4986">+                codePoint &gt;= 0x10000</tspan>

<tspan x="10" y="5002">+                ? 2</tspan>

<tspan x="10" y="5018">+                : 1</tspan>

<tspan x="10" y="5034">+            );</tspan>

<tspan x="10" y="5050">+        }</tspan>

<tspan x="10" y="5066">+        return octets;</tspan>

<tspan x="10" y="5082">+    };</tspan>

<tspan x="10" y="5098">+    globalThis.TextDecoder = globalThis.TextDecoder || TextXxcoder;</tspan>

<tspan x="10" y="5114">+    globalThis.TextEncoder = globalThis.TextEncoder || TextXxcoder;</tspan>

<tspan x="10" y="5130">     // init local</tspan>

<tspan x="10" y="5146">     local = {};</tspan>

<tspan x="10" y="5162">     local.local = local;</tspan>

<tspan x="10" y="5178">     globalThis.globalLocal = local;</tspan>

<tspan x="10" y="5194">     // init isBrowser</tspan>

<tspan x="10" y="5210">     local.isBrowser = (</tspan>

<tspan x="10" y="5226">-        typeof window === "object"</tspan>

<tspan x="10" y="5242">-        &amp;&amp; window === globalThis</tspan>

<tspan x="10" y="5258">-        &amp;&amp; typeof window.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="5274">-        &amp;&amp; window.document</tspan>

<tspan x="10" y="5290">-        &amp;&amp; typeof window.document.querySelector === "function"</tspan>

<tspan x="10" y="5306">+        typeof globalThis.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="5322">+        &amp;&amp; globalThis.navigator</tspan>

<tspan x="10" y="5338">+        &amp;&amp; typeof globalThis.navigator.userAgent === "string"</tspan>

<tspan x="10" y="5354">+    );</tspan>

<tspan x="10" y="5370">+    // init isWebWorker</tspan>

<tspan x="10" y="5386">+    local.isWebWorker = (</tspan>

<tspan x="10" y="5402">+        local.isBrowser &amp;&amp; typeof globalThis.importScript === "function"</tspan>

<tspan x="10" y="5418">     );</tspan>

<tspan x="10" y="5434">     // init function</tspan>

<tspan x="10" y="5450">-    local.assertThrow = function (passed, message) {</tspan>

<tspan x="10" y="5466">+    local.assertOrThrow = function (passed, message) {</tspan>

<tspan x="10" y="5482">     /*</tspan>

<tspan x="10" y="5498">-     * this function will throw error &lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="5514">+     * this function will throw err.&lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="5530">      */</tspan>

<tspan x="10" y="5546">-        var error;</tspan>

<tspan x="10" y="5562">+        let err;</tspan>

<tspan x="10" y="5578">         if (passed) {</tspan>

<tspan x="10" y="5594">             return;</tspan>

<tspan x="10" y="5610">         }</tspan>

<tspan x="10" y="5626">-        error = (</tspan>

<tspan x="10" y="5642">-            // ternary-condition</tspan>

<tspan x="10" y="5658">+        err = (</tspan>

<tspan x="10" y="5674">             (</tspan>

<tspan x="10" y="5690">                 message</tspan>

<tspan x="10" y="5706">                 &amp;&amp; typeof message.message === "string"</tspan>

<tspan x="10" y="5722">                 &amp;&amp; typeof message.stack === "string"</tspan>

<tspan x="10" y="5738">             )</tspan>

<tspan x="10" y="5754">-            // if message is an error-object, then leave it as is</tspan>

<tspan x="10" y="5770">+            // if message is errObj, then leave as is</tspan>

<tspan x="10" y="5786">             ? message</tspan>

<tspan x="10" y="5802">             : new Error(</tspan>

<tspan x="10" y="5818">                 typeof message === "string"</tspan>

<tspan x="10" y="5834">-                // if message is a string, then leave it as is</tspan>

<tspan x="10" y="5850">+                // if message is a string, then leave as is</tspan>

<tspan x="10" y="5866">                 ? message</tspan>

<tspan x="10" y="5882">                 // else JSON.stringify message</tspan>

<tspan x="10" y="5898">-                : JSON.stringify(message, null, 4)</tspan>

<tspan x="10" y="5914">+                : JSON.stringify(message, undefined, 4)</tspan>

<tspan x="10" y="5930">             )</tspan>

<tspan x="10" y="5946">         );</tspan>

<tspan x="10" y="5962">-        throw error;</tspan>

<tspan x="10" y="5978">+        throw err;</tspan>

<tspan x="10" y="5994">+    };</tspan>

<tspan x="10" y="6010">+    local.coalesce = function (...argList) {</tspan>

<tspan x="10" y="6026">+    /*</tspan>

<tspan x="10" y="6042">+     * this function will coalesce null, undefined, or "" in &lt;argList&gt;</tspan>

<tspan x="10" y="6058">+     */</tspan>

<tspan x="10" y="6074">+        let arg;</tspan>

<tspan x="10" y="6090">+        let ii;</tspan>

<tspan x="10" y="6106">+        ii = 0;</tspan>

<tspan x="10" y="6122">+        while (ii &lt; argList.length) {</tspan>

<tspan x="10" y="6138">+            arg = argList[ii];</tspan>

<tspan x="10" y="6154">+            if (arg !== null &amp;&amp; arg !== undefined &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="6170">+                break;</tspan>

<tspan x="10" y="6186">+            }</tspan>

<tspan x="10" y="6202">+            ii += 1;</tspan>

<tspan x="10" y="6218">+        }</tspan>

<tspan x="10" y="6234">+        return arg;</tspan>

<tspan x="10" y="6250">+    };</tspan>

<tspan x="10" y="6266">+    local.fsRmrfSync = function (dir) {</tspan>

<tspan x="10" y="6282">+    /*</tspan>

<tspan x="10" y="6298">+     * this function will sync "rm -rf" &lt;dir&gt;</tspan>

<tspan x="10" y="6314">+     */</tspan>

<tspan x="10" y="6330">+        let child_process;</tspan>

<tspan x="10" y="6346">+        try {</tspan>

<tspan x="10" y="6362">+            child_process = require("child_process");</tspan>

<tspan x="10" y="6378">+        } catch (ignore) {</tspan>

<tspan x="10" y="6394">+            return;</tspan>

<tspan x="10" y="6410">+        }</tspan>

<tspan x="10" y="6426">+        child_process.spawnSync("rm", [</tspan>

<tspan x="10" y="6442">+            "-rf", dir</tspan>

<tspan x="10" y="6458">+        ], {</tspan>

<tspan x="10" y="6474">+            stdio: [</tspan>

<tspan x="10" y="6490">+                "ignore", 1, 2</tspan>

<tspan x="10" y="6506">+            ]</tspan>

<tspan x="10" y="6522">+        });</tspan>

<tspan x="10" y="6538">+    };</tspan>

<tspan x="10" y="6554">+    local.fsWriteFileWithMkdirpSync = function (file, data) {</tspan>

<tspan x="10" y="6570">+    /*</tspan>

<tspan x="10" y="6586">+     * this function will sync write &lt;data&gt; to &lt;file&gt; with "mkdir -p"</tspan>

<tspan x="10" y="6602">+     */</tspan>

<tspan x="10" y="6618">+        let fs;</tspan>

<tspan x="10" y="6634">+        try {</tspan>

<tspan x="10" y="6650">+            fs = require("fs");</tspan>

<tspan x="10" y="6666">+        } catch (ignore) {</tspan>

<tspan x="10" y="6682">+            return;</tspan>

<tspan x="10" y="6698">+        }</tspan>

<tspan x="10" y="6714">+        // try to write file</tspan>

<tspan x="10" y="6730">+        try {</tspan>

<tspan x="10" y="6746">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="6762">+        } catch (ignore) {</tspan>

<tspan x="10" y="6778">+            // mkdir -p</tspan>

<tspan x="10" y="6794">+            require("child_process").spawnSync(</tspan>

<tspan x="10" y="6810">+                "mkdir",</tspan>

<tspan x="10" y="6826">+                [</tspan>

<tspan x="10" y="6842">+                    "-p", require("path").dirname(file)</tspan>

<tspan x="10" y="6858">+                ],</tspan>

<tspan x="10" y="6874">+                {</tspan>

<tspan x="10" y="6890">+                    stdio: [</tspan>

<tspan x="10" y="6906">+                        "ignore", 1, 2</tspan>

<tspan x="10" y="6922">+                    ]</tspan>

<tspan x="10" y="6938">+                }</tspan>

<tspan x="10" y="6954">+            );</tspan>

<tspan x="10" y="6970">+            // rewrite file</tspan>

<tspan x="10" y="6986">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="7002">+        }</tspan>

<tspan x="10" y="7018">     };</tspan>

<tspan x="10" y="7034">     local.functionOrNop = function (fnc) {</tspan>

<tspan x="10" y="7050">     /*</tspan>

<tspan x="10" y="7066">      * this function will if &lt;fnc&gt; exists,</tspan>

<tspan x="10" y="7082">-     * them return &lt;fnc&gt;,</tspan>

<tspan x="10" y="7098">+     * return &lt;fnc&gt;,</tspan>

<tspan x="10" y="7114">      * else return &lt;nop&gt;</tspan>

<tspan x="10" y="7130">      */</tspan>

<tspan x="10" y="7146">         return fnc || local.nop;</tspan>

<tspan x="10" y="7162">     };</tspan>

<tspan x="10" y="7178">-    local.identity = function (value) {</tspan>

<tspan x="10" y="7194">+    local.identity = function (val) {</tspan>

<tspan x="10" y="7210">     /*</tspan>

<tspan x="10" y="7226">-     * this function will return &lt;value&gt;</tspan>

<tspan x="10" y="7242">+     * this function will return &lt;val&gt;</tspan>

<tspan x="10" y="7258">      */</tspan>

<tspan x="10" y="7274">-        return value;</tspan>

<tspan x="10" y="7290">+        return val;</tspan>

<tspan x="10" y="7306">     };</tspan>

<tspan x="10" y="7322">     local.nop = function () {</tspan>

<tspan x="10" y="7338">     /*</tspan>

<tspan x="10" y="7354">@@ -209,11 +420,11 @@</tspan>

<tspan x="10" y="7370">     };</tspan>

<tspan x="10" y="7386">     local.objectAssignDefault = function (target, source) {</tspan>

<tspan x="10" y="7402">     /*</tspan>

<tspan x="10" y="7418">-     * this function will if items from &lt;target&gt; are</tspan>

<tspan x="10" y="7434">-     * null, undefined, or empty-string,</tspan>

<tspan x="10" y="7450">+     * this function will if items from &lt;target&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="7466">      * then overwrite them with items from &lt;source&gt;</tspan>

<tspan x="10" y="7482">      */</tspan>

<tspan x="10" y="7498">-        Object.keys(source).forEach(function (key) {</tspan>

<tspan x="10" y="7514">+        target = target || {};</tspan>

<tspan x="10" y="7530">+        Object.keys(source || {}).forEach(function (key) {</tspan>

<tspan x="10" y="7546">             if (</tspan>

<tspan x="10" y="7562">                 target[key] === null</tspan>

<tspan x="10" y="7578">                 || target[key] === undefined</tspan>

<tspan x="10" y="7594">@@ -224,6 +435,26 @@</tspan>

<tspan x="10" y="7610">         });</tspan>

<tspan x="10" y="7626">         return target;</tspan>

<tspan x="10" y="7642">     };</tspan>

<tspan x="10" y="7658">+    local.querySelector = function (selectors) {</tspan>

<tspan x="10" y="7674">+    /*</tspan>

<tspan x="10" y="7690">+     * this function will return first dom-elem that match &lt;selectors&gt;</tspan>

<tspan x="10" y="7706">+     */</tspan>

<tspan x="10" y="7722">+        return (</tspan>

<tspan x="10" y="7738">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="7754">+            &amp;&amp; typeof document.querySelector === "function"</tspan>

<tspan x="10" y="7770">+            &amp;&amp; document.querySelector(selectors)</tspan>

<tspan x="10" y="7786">+        ) || {};</tspan>

<tspan x="10" y="7802">+    };</tspan>

<tspan x="10" y="7818">+    local.querySelectorAll = function (selectors) {</tspan>

<tspan x="10" y="7834">+    /*</tspan>

<tspan x="10" y="7850">+     * this function will return dom-elem-list that match &lt;selectors&gt;</tspan>

<tspan x="10" y="7866">+     */</tspan>

<tspan x="10" y="7882">+        return (</tspan>

<tspan x="10" y="7898">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="7914">+            &amp;&amp; typeof document.querySelectorAll === "function"</tspan>

<tspan x="10" y="7930">+            &amp;&amp; Array.from(document.querySelectorAll(selectors))</tspan>

<tspan x="10" y="7946">+        ) || [];</tspan>

<tspan x="10" y="7962">+    };</tspan>

<tspan x="10" y="7978">     // require builtin</tspan>

<tspan x="10" y="7994">     if (!local.isBrowser) {</tspan>

<tspan x="10" y="8010">         local.assert = require("assert");</tspan>

<tspan x="10" y="8026">@@ -254,10 +485,14 @@</tspan>

<tspan x="10" y="8042">         local.vm = require("vm");</tspan>

<tspan x="10" y="8058">         local.zlib = require("zlib");</tspan>

<tspan x="10" y="8074">     }</tspan>

<tspan x="10" y="8090">-}(this));</tspan>

<tspan x="10" y="8106">+}((typeof globalThis === "object" &amp;&amp; globalThis) || (function () {</tspan>

<tspan x="10" y="8122">+    return Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="8138">+}())));</tspan>

<tspan x="10" y="8154">+// assets.utility2.header.js - end</tspan>

<tspan x="10" y="8170"> </tspan>

<tspan x="10" y="8186"> </tspan>

<tspan x="10" y="8202"> </tspan>

<tspan x="10" y="8218">+/* jslint utility2:true */</tspan>

<tspan x="10" y="8234"> (function (local) {</tspan>

<tspan x="10" y="8250"> "use strict";</tspan>

<tspan x="10" y="8266"> </tspan>

<tspan x="10" y="8282">@@ -287,7 +522,6 @@</tspan>

<tspan x="10" y="8298"> </tspan>

<tspan x="10" y="8314"> </tspan>

<tspan x="10" y="8330"> </tspan>

<tspan x="10" y="8346">-/* istanbul ignore next */</tspan>

<tspan x="10" y="8362"> // run node js-env code - init-test</tspan>

<tspan x="10" y="8378"> (function () {</tspan>

<tspan x="10" y="8394"> if (local.isBrowser) {</tspan>

<tspan x="10" y="8410">@@ -295,11 +529,9 @@</tspan>

<tspan x="10" y="8426"> }</tspan>

<tspan x="10" y="8442"> // init exports</tspan>

<tspan x="10" y="8458"> module.exports = local;</tspan>

<tspan x="10" y="8474">-/* validateLineSortedReset */</tspan>

<tspan x="10" y="8490">-// init assets</tspan>

<tspan x="10" y="8506">+// init assetsDict</tspan>

<tspan x="10" y="8522"> local.assetsDict = local.assetsDict || {};</tspan>

<tspan x="10" y="8538"> [</tspan>

<tspan x="10" y="8554">-    "assets.index.template.html",</tspan>

<tspan x="10" y="8570">     "assets.swgg.swagger.json",</tspan>

<tspan x="10" y="8586">     "assets.swgg.swagger.server.json"</tspan>

<tspan x="10" y="8602"> ].forEach(function (file) {</tspan>

<tspan x="10" y="8618">@@ -1173,16 +1405,19 @@</tspan>

<tspan x="10" y="8634"> &lt;/html&gt;\n\</tspan>

<tspan x="10" y="8650"> ';</tspan>

<tspan x="10" y="8666"> /* jslint ignore:end */</tspan>

<tspan x="10" y="8682">+local.assetsDict["/assets.bootstrap.js"] = (</tspan>

<tspan x="10" y="8698">+    local.assetsDict["/assets.bootstrap.js"]</tspan>

<tspan x="10" y="8714">+    || local.fs.readFileSync(</tspan>

<tspan x="10" y="8730">+        local.__dirname + "/lib.bootstrap.js",</tspan>

<tspan x="10" y="8746">+        "utf8"</tspan>

<tspan x="10" y="8762">+    ).replace((</tspan>

<tspan x="10" y="8778">+        /^#!\//</tspan>

<tspan x="10" y="8794">+    ), "// ")</tspan>

<tspan x="10" y="8810">+);</tspan>

<tspan x="10" y="8826"> /* validateLineSortedReset */</tspan>

<tspan x="10" y="8842">-/* jslint ignore:start */</tspan>

<tspan x="10" y="8858">-local.assetsDict["/assets.bootstrap.js"] =</tspan>

<tspan x="10" y="8874">-    local.assetsDict["/assets.bootstrap.js"] ||</tspan>

<tspan x="10" y="8890">-    local.fs.readFileSync(local.__dirname + "/lib.bootstrap.js", "utf8"</tspan>

<tspan x="10" y="8906">-).replace((/^#!\//), "// ");</tspan>

<tspan x="10" y="8922">-/* jslint ignore:end */</tspan>

<tspan x="10" y="8938">-/* validateLineSortedReset */</tspan>

<tspan x="10" y="8954">-local.assetsDict["/"] = local.assetsDict["/assets.index.template.html"]</tspan>

<tspan x="10" y="8970">-.replace((</tspan>

<tspan x="10" y="8986">+local.assetsDict["/"] = local.assetsDict[</tspan>

<tspan x="10" y="9002">+    "/assets.index.template.html"</tspan>

<tspan x="10" y="9018">+].replace((</tspan>

<tspan x="10" y="9034">     /\{\{env\.(\w+?)\}\}/g</tspan>

<tspan x="10" y="9050"> ), function (match0, match1) {</tspan>

<tspan x="10" y="9066">     switch (match1) {</tspan>

<tspan x="10" y="9082">@@ -1199,17 +1434,16 @@</tspan>

<tspan x="10" y="9098">     }</tspan>

<tspan x="10" y="9114"> });</tspan>

<tspan x="10" y="9130"> local.assetsDict["/assets.example.html"] = local.assetsDict["/"];</tspan>

<tspan x="10" y="9146">-local.assetsDict["/index.html"] = local.assetsDict["/"];</tspan>

<tspan x="10" y="9162"> // init cli</tspan>

<tspan x="10" y="9178"> if (module !== require.main || globalThis.utility2_rollup) {</tspan>

<tspan x="10" y="9194">     return;</tspan>

<tspan x="10" y="9210"> }</tspan>

<tspan x="10" y="9226">-/* validateLineSortedReset */</tspan>

<tspan x="10" y="9242"> local.assetsDict["/assets.example.js"] = (</tspan>

<tspan x="10" y="9258">     local.assetsDict["/assets.example.js"]</tspan>

<tspan x="10" y="9274">     || local.fs.readFileSync(__filename, "utf8")</tspan>

<tspan x="10" y="9290"> );</tspan>

<tspan x="10" y="9306"> local.assetsDict["/favicon.ico"] = local.assetsDict["/favicon.ico"] || "";</tspan>

<tspan x="10" y="9322">+local.assetsDict["/index.html"] = local.assetsDict["/"];</tspan>

<tspan x="10" y="9338"> // if $npm_config_timeout_exit exists,</tspan>

<tspan x="10" y="9354"> // then exit this process after $npm_config_timeout_exit ms</tspan>

<tspan x="10" y="9370"> if (Number(process.env.npm_config_timeout_exit)) {</tspan>

<tspan x="10" y="9386">@@ -1221,19 +1455,16 @@</tspan>

<tspan x="10" y="9402"> }</tspan>

<tspan x="10" y="9418"> process.env.PORT = process.env.PORT || "8081";</tspan>

<tspan x="10" y="9434"> console.error("http-server listening on port " + process.env.PORT);</tspan>

<tspan x="10" y="9450">-local.http.createServer(function (request, response) {</tspan>

<tspan x="10" y="9466">-    request.urlParsed = local.url.parse(request.url);</tspan>

<tspan x="10" y="9482">-    if (local.assetsDict[request.urlParsed.pathname] !== undefined) {</tspan>

<tspan x="10" y="9498">-        response.end(local.assetsDict[request.urlParsed.pathname]);</tspan>

<tspan x="10" y="9514">+local.http.createServer(function (req, res) {</tspan>

<tspan x="10" y="9530">+    req.urlParsed = local.url.parse(req.url);</tspan>

<tspan x="10" y="9546">+    if (local.assetsDict[req.urlParsed.pathname] !== undefined) {</tspan>

<tspan x="10" y="9562">+        res.end(local.assetsDict[req.urlParsed.pathname]);</tspan>

<tspan x="10" y="9578">         return;</tspan>

<tspan x="10" y="9594">     }</tspan>

<tspan x="10" y="9610">-    response.statusCode = 404;</tspan>

<tspan x="10" y="9626">-    response.end();</tspan>

<tspan x="10" y="9642">+    res.statusCode = 404;</tspan>

<tspan x="10" y="9658">+    res.end();</tspan>

<tspan x="10" y="9674"> }).listen(process.env.PORT);</tspan>

<tspan x="10" y="9690"> }());</tspan>

<tspan x="10" y="9706">-</tspan>

<tspan x="10" y="9722">-</tspan>

<tspan x="10" y="9738">-</tspan>

<tspan x="10" y="9754"> }());</tspan>

<tspan x="10" y="9770"> ```</tspan>

<tspan x="10" y="9786"> </tspan>

<tspan x="10" y="9802">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/READM\</tspan>
<tspan x="10" y="9818">E.md</tspan>

<tspan x="10" y="9834">jslint - 157ms /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md</tspan>

<tspan x="10" y="9850">testRunDefault - 173 ms - [node test-case 3 of 7 passed] - testCase_buildReadme_default</tspan>

<tspan x="10" y="9866">testRunDefault - 174 ms - [node test-case 4 of 7 passed] - testCase_buildTest_default</tspan>

<tspan x="10" y="9882">testRunDefault - 174 ms - [node test-case 5 of 7 passed] - testCase_nop_default</tspan>

<tspan x="10" y="9898">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js.autofix.old	2020-01-20 21\</tspan>
<tspan x="10" y="9914">:40:12.882548004 +0000</tspan>

<tspan x="10" y="9930">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js	2020-01-20 21:40:12.88254\</tspan>
<tspan x="10" y="9946">8004 +0000</tspan>

<tspan x="10" y="9962">@@ -9,91 +9,302 @@</tspan>

<tspan x="10" y="9978"> </tspan>

<tspan x="10" y="9994"> </tspan>

<tspan x="10" y="10010"> /* istanbul instrument in package bootstrap */</tspan>

<tspan x="10" y="10026">+// assets.utility2.header.js - start</tspan>

<tspan x="10" y="10042"> /* istanbul ignore next */</tspan>

<tspan x="10" y="10058"> /* jslint utility2:true */</tspan>

<tspan x="10" y="10074"> (function (globalThis) {</tspan>

<tspan x="10" y="10090">     "use strict";</tspan>

<tspan x="10" y="10106">-    var consoleError;</tspan>

<tspan x="10" y="10122">-    var local;</tspan>

<tspan x="10" y="10138">+    let ArrayPrototypeFlat;</tspan>

<tspan x="10" y="10154">+    let TextXxcoder;</tspan>

<tspan x="10" y="10170">+    let consoleError;</tspan>

<tspan x="10" y="10186">+    let debugName;</tspan>

<tspan x="10" y="10202">+    let local;</tspan>

<tspan x="10" y="10218">+    debugName = "debug" + String("Inline");</tspan>

<tspan x="10" y="10234">     // init globalThis</tspan>

<tspan x="10" y="10250">-    (function () {</tspan>

<tspan x="10" y="10266">-        try {</tspan>

<tspan x="10" y="10282">-            globalThis = Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="10298">-        } catch (ignore) {}</tspan>

<tspan x="10" y="10314">-    }());</tspan>

<tspan x="10" y="10330">-    globalThis.globalThis = globalThis;</tspan>

<tspan x="10" y="10346">+    globalThis.globalThis = globalThis.globalThis || globalThis;</tspan>

<tspan x="10" y="10362">     // init debug_inline</tspan>

<tspan x="10" y="10378">-    if (!globalThis["debugInline"]) {</tspan>

<tspan x="10" y="10394">+    if (!globalThis[debugName]) {</tspan>

<tspan x="10" y="10410">         consoleError = console.error;</tspan>

<tspan x="10" y="10426">-        globalThis["debugInline"] = function () {</tspan>

<tspan x="10" y="10442">+        globalThis[debugName] = function (...argList) {</tspan>

<tspan x="10" y="10458">         /*</tspan>

<tspan x="10" y="10474">-         * this function will both print &lt;arguments&gt; to stderr</tspan>

<tspan x="10" y="10490">-         * and return &lt;arguments&gt;[0]</tspan>

<tspan x="10" y="10506">+         * this function will both print &lt;argList&gt; to stderr</tspan>

<tspan x="10" y="10522">+         * and return &lt;argList&gt;[0]</tspan>

<tspan x="10" y="10538">          */</tspan>

<tspan x="10" y="10554">-            var argList;</tspan>

<tspan x="10" y="10570">-            argList = Array.from(arguments); // jslint ignore:line</tspan>

<tspan x="10" y="10586">-            // debug arguments</tspan>

<tspan x="10" y="10602">-            globalThis["debugInlineArguments"] = argList;</tspan>

<tspan x="10" y="10618">-            consoleError("\n\ndebugInline");</tspan>

<tspan x="10" y="10634">+            consoleError("\n\n" + debugName);</tspan>

<tspan x="10" y="10650">             consoleError.apply(console, argList);</tspan>

<tspan x="10" y="10666">             consoleError("\n");</tspan>

<tspan x="10" y="10682">             // return arg0 for inspection</tspan>

<tspan x="10" y="10698">             return argList[0];</tspan>

<tspan x="10" y="10714">         };</tspan>

<tspan x="10" y="10730">     }</tspan>

<tspan x="10" y="10746">+    // polyfill</tspan>

<tspan x="10" y="10762">+    ArrayPrototypeFlat = function (depth) {</tspan>

<tspan x="10" y="10778">+    /*</tspan>

<tspan x="10" y="10794">+     * this function will polyfill Array.prototype.flat</tspan>

<tspan x="10" y="10810">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="10826">+     */</tspan>

<tspan x="10" y="10842">+        depth = (</tspan>

<tspan x="10" y="10858">+            globalThis.isNaN(depth)</tspan>

<tspan x="10" y="10874">+            ? 1</tspan>

<tspan x="10" y="10890">+            : Number(depth)</tspan>

<tspan x="10" y="10906">+        );</tspan>

<tspan x="10" y="10922">+        if (!depth) {</tspan>

<tspan x="10" y="10938">+            return Array.prototype.slice.call(this);</tspan>

<tspan x="10" y="10954">+        }</tspan>

<tspan x="10" y="10970">+        return Array.prototype.reduce.call(this, function (acc, cur) {</tspan>

<tspan x="10" y="10986">+            if (Array.isArray(cur)) {</tspan>

<tspan x="10" y="11002">+                // recurse</tspan>

<tspan x="10" y="11018">+                acc.push.apply(acc, ArrayPrototypeFlat.call(cur, depth - 1));</tspan>

<tspan x="10" y="11034">+            } else {</tspan>

<tspan x="10" y="11050">+                acc.push(cur);</tspan>

<tspan x="10" y="11066">+            }</tspan>

<tspan x="10" y="11082">+            return acc;</tspan>

<tspan x="10" y="11098">+        }, []);</tspan>

<tspan x="10" y="11114">+    };</tspan>

<tspan x="10" y="11130">+    Array.prototype.flat = Array.prototype.flat || ArrayPrototypeFlat;</tspan>

<tspan x="10" y="11146">+    Array.prototype.flatMap = Array.prototype.flatMap || function flatMap(</tspan>

<tspan x="10" y="11162">+        ...argList</tspan>

<tspan x="10" y="11178">+    ) {</tspan>

<tspan x="10" y="11194">+    /*</tspan>

<tspan x="10" y="11210">+     * this function will polyfill Array.prototype.flatMap</tspan>

<tspan x="10" y="11226">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="11242">+     */</tspan>

<tspan x="10" y="11258">+        return this.map(...argList).flat();</tspan>

<tspan x="10" y="11274">+    };</tspan>

<tspan x="10" y="11290">+    String.prototype.trimEnd = (</tspan>

<tspan x="10" y="11306">+        String.prototype.trimEnd || String.prototype.trimRight</tspan>

<tspan x="10" y="11322">+    );</tspan>

<tspan x="10" y="11338">+    String.prototype.trimStart = (</tspan>

<tspan x="10" y="11354">+        String.prototype.trimStart || String.prototype.trimLeft</tspan>

<tspan x="10" y="11370">+    );</tspan>

<tspan x="10" y="11386">+    (function () {</tspan>

<tspan x="10" y="11402">+        try {</tspan>

<tspan x="10" y="11418">+            globalThis.TextDecoder = (</tspan>

<tspan x="10" y="11434">+                globalThis.TextDecoder || require("util").TextDecoder</tspan>

<tspan x="10" y="11450">+            );</tspan>

<tspan x="10" y="11466">+            globalThis.TextEncoder = (</tspan>

<tspan x="10" y="11482">+                globalThis.TextEncoder || require("util").TextEncoder</tspan>

<tspan x="10" y="11498">+            );</tspan>

<tspan x="10" y="11514">+        } catch (ignore) {}</tspan>

<tspan x="10" y="11530">+    }());</tspan>

<tspan x="10" y="11546">+    TextXxcoder = function () {</tspan>

<tspan x="10" y="11562">+    /*</tspan>

<tspan x="10" y="11578">+     * this function will polyfill TextDecoder/TextEncoder</tspan>

<tspan x="10" y="11594">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="11610">+     */</tspan>

<tspan x="10" y="11626">+        return;</tspan>

<tspan x="10" y="11642">+    };</tspan>

<tspan x="10" y="11658">+    TextXxcoder.prototype.decode = function (octets) {</tspan>

<tspan x="10" y="11674">+    /*</tspan>

<tspan x="10" y="11690">+     * this function will polyfill TextDecoder.prototype.decode</tspan>

<tspan x="10" y="11706">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="11722">+     */</tspan>

<tspan x="10" y="11738">+        let bytesNeeded;</tspan>

<tspan x="10" y="11754">+        let codePoint;</tspan>

<tspan x="10" y="11770">+        let ii;</tspan>

<tspan x="10" y="11786">+        let kk;</tspan>

<tspan x="10" y="11802">+        let octet;</tspan>

<tspan x="10" y="11818">+        let string;</tspan>

<tspan x="10" y="11834">+        string = "";</tspan>

<tspan x="10" y="11850">+        ii = 0;</tspan>

<tspan x="10" y="11866">+        while (ii &lt; octets.length) {</tspan>

<tspan x="10" y="11882">+            octet = octets[ii];</tspan>

<tspan x="10" y="11898">+            bytesNeeded = 0;</tspan>

<tspan x="10" y="11914">+            codePoint = 0;</tspan>

<tspan x="10" y="11930">+            if (octet &lt;= 0x7F) {</tspan>

<tspan x="10" y="11946">+                bytesNeeded = 0;</tspan>

<tspan x="10" y="11962">+                codePoint = octet &amp; 0xFF;</tspan>

<tspan x="10" y="11978">+            } else if (octet &lt;= 0xDF) {</tspan>

<tspan x="10" y="11994">+                bytesNeeded = 1;</tspan>

<tspan x="10" y="12010">+                codePoint = octet &amp; 0x1F;</tspan>

<tspan x="10" y="12026">+            } else if (octet &lt;= 0xEF) {</tspan>

<tspan x="10" y="12042">+                bytesNeeded = 2;</tspan>

<tspan x="10" y="12058">+                codePoint = octet &amp; 0x0F;</tspan>

<tspan x="10" y="12074">+            } else if (octet &lt;= 0xF4) {</tspan>

<tspan x="10" y="12090">+                bytesNeeded = 3;</tspan>

<tspan x="10" y="12106">+                codePoint = octet &amp; 0x07;</tspan>

<tspan x="10" y="12122">+            }</tspan>

<tspan x="10" y="12138">+            if (octets.length - ii - bytesNeeded &gt; 0) {</tspan>

<tspan x="10" y="12154">+                kk = 0;</tspan>

<tspan x="10" y="12170">+                while (kk &lt; bytesNeeded) {</tspan>

<tspan x="10" y="12186">+                    octet = octets[ii + kk + 1];</tspan>

<tspan x="10" y="12202">+                    codePoint = (codePoint &lt;&lt; 6) | (octet &amp; 0x3F);</tspan>

<tspan x="10" y="12218">+                    kk += 1;</tspan>

<tspan x="10" y="12234">+                }</tspan>

<tspan x="10" y="12250">+            } else {</tspan>

<tspan x="10" y="12266">+                codePoint = 0xFFFD;</tspan>

<tspan x="10" y="12282">+                bytesNeeded = octets.length - ii;</tspan>

<tspan x="10" y="12298">+            }</tspan>

<tspan x="10" y="12314">+            string += String.fromCodePoint(codePoint);</tspan>

<tspan x="10" y="12330">+            ii += bytesNeeded + 1;</tspan>

<tspan x="10" y="12346">+        }</tspan>

<tspan x="10" y="12362">+        return string;</tspan>

<tspan x="10" y="12378">+    };</tspan>

<tspan x="10" y="12394">+    TextXxcoder.prototype.encode = function (string) {</tspan>

<tspan x="10" y="12410">+    /*</tspan>

<tspan x="10" y="12426">+     * this function will polyfill TextEncoder.prototype.encode</tspan>

<tspan x="10" y="12442">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="12458">+     */</tspan>

<tspan x="10" y="12474">+        let bits;</tspan>

<tspan x="10" y="12490">+        let cc;</tspan>

<tspan x="10" y="12506">+        let codePoint;</tspan>

<tspan x="10" y="12522">+        let ii;</tspan>

<tspan x="10" y="12538">+        let length;</tspan>

<tspan x="10" y="12554">+        let octets;</tspan>

<tspan x="10" y="12570">+        octets = [];</tspan>

<tspan x="10" y="12586">+        length = string.length;</tspan>

<tspan x="10" y="12602">+        ii = 0;</tspan>

<tspan x="10" y="12618">+        while (ii &lt; length) {</tspan>

<tspan x="10" y="12634">+            codePoint = string.codePointAt(ii);</tspan>

<tspan x="10" y="12650">+            cc = 0;</tspan>

<tspan x="10" y="12666">+            bits = 0;</tspan>

<tspan x="10" y="12682">+            if (codePoint &lt;= 0x0000007F) {</tspan>

<tspan x="10" y="12698">+                cc = 0;</tspan>

<tspan x="10" y="12714">+                bits = 0x00;</tspan>

<tspan x="10" y="12730">+            } else if (codePoint &lt;= 0x000007FF) {</tspan>

<tspan x="10" y="12746">+                cc = 6;</tspan>

<tspan x="10" y="12762">+                bits = 0xC0;</tspan>

<tspan x="10" y="12778">+            } else if (codePoint &lt;= 0x0000FFFF) {</tspan>

<tspan x="10" y="12794">+                cc = 12;</tspan>

<tspan x="10" y="12810">+                bits = 0xE0;</tspan>

<tspan x="10" y="12826">+            } else if (codePoint &lt;= 0x001FFFFF) {</tspan>

<tspan x="10" y="12842">+                cc = 18;</tspan>

<tspan x="10" y="12858">+                bits = 0xF0;</tspan>

<tspan x="10" y="12874">+            }</tspan>

<tspan x="10" y="12890">+            octets.push(bits | (codePoint &gt;&gt; cc));</tspan>

<tspan x="10" y="12906">+            cc -= 6;</tspan>

<tspan x="10" y="12922">+            while (cc &gt;= 0) {</tspan>

<tspan x="10" y="12938">+                octets.push(0x80 | ((codePoint &gt;&gt; cc) &amp; 0x3F));</tspan>

<tspan x="10" y="12954">+                cc -= 6;</tspan>

<tspan x="10" y="12970">+            }</tspan>

<tspan x="10" y="12986">+            ii += (</tspan>

<tspan x="10" y="13002">+                codePoint &gt;= 0x10000</tspan>

<tspan x="10" y="13018">+                ? 2</tspan>

<tspan x="10" y="13034">+                : 1</tspan>

<tspan x="10" y="13050">+            );</tspan>

<tspan x="10" y="13066">+        }</tspan>

<tspan x="10" y="13082">+        return octets;</tspan>

<tspan x="10" y="13098">+    };</tspan>

<tspan x="10" y="13114">+    globalThis.TextDecoder = globalThis.TextDecoder || TextXxcoder;</tspan>

<tspan x="10" y="13130">+    globalThis.TextEncoder = globalThis.TextEncoder || TextXxcoder;</tspan>

<tspan x="10" y="13146">     // init local</tspan>

<tspan x="10" y="13162">     local = {};</tspan>

<tspan x="10" y="13178">     local.local = local;</tspan>

<tspan x="10" y="13194">     globalThis.globalLocal = local;</tspan>

<tspan x="10" y="13210">     // init isBrowser</tspan>

<tspan x="10" y="13226">     local.isBrowser = (</tspan>

<tspan x="10" y="13242">-        typeof window === "object"</tspan>

<tspan x="10" y="13258">-        &amp;&amp; window === globalThis</tspan>

<tspan x="10" y="13274">-        &amp;&amp; typeof window.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="13290">-        &amp;&amp; window.document</tspan>

<tspan x="10" y="13306">-        &amp;&amp; typeof window.document.querySelector === "function"</tspan>

<tspan x="10" y="13322">+        typeof globalThis.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="13338">+        &amp;&amp; globalThis.navigator</tspan>

<tspan x="10" y="13354">+        &amp;&amp; typeof globalThis.navigator.userAgent === "string"</tspan>

<tspan x="10" y="13370">+    );</tspan>

<tspan x="10" y="13386">+    // init isWebWorker</tspan>

<tspan x="10" y="13402">+    local.isWebWorker = (</tspan>

<tspan x="10" y="13418">+        local.isBrowser &amp;&amp; typeof globalThis.importScript === "function"</tspan>

<tspan x="10" y="13434">     );</tspan>

<tspan x="10" y="13450">     // init function</tspan>

<tspan x="10" y="13466">-    local.assertThrow = function (passed, message) {</tspan>

<tspan x="10" y="13482">+    local.assertOrThrow = function (passed, message) {</tspan>

<tspan x="10" y="13498">     /*</tspan>

<tspan x="10" y="13514">-     * this function will throw error &lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="13530">+     * this function will throw err.&lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="13546">      */</tspan>

<tspan x="10" y="13562">-        var error;</tspan>

<tspan x="10" y="13578">+        let err;</tspan>

<tspan x="10" y="13594">         if (passed) {</tspan>

<tspan x="10" y="13610">             return;</tspan>

<tspan x="10" y="13626">         }</tspan>

<tspan x="10" y="13642">-        error = (</tspan>

<tspan x="10" y="13658">-            // ternary-condition</tspan>

<tspan x="10" y="13674">+        err = (</tspan>

<tspan x="10" y="13690">             (</tspan>

<tspan x="10" y="13706">                 message</tspan>

<tspan x="10" y="13722">                 &amp;&amp; typeof message.message === "string"</tspan>

<tspan x="10" y="13738">                 &amp;&amp; typeof message.stack === "string"</tspan>

<tspan x="10" y="13754">             )</tspan>

<tspan x="10" y="13770">-            // if message is an error-object, then leave it as is</tspan>

<tspan x="10" y="13786">+            // if message is errObj, then leave as is</tspan>

<tspan x="10" y="13802">             ? message</tspan>

<tspan x="10" y="13818">             : new Error(</tspan>

<tspan x="10" y="13834">                 typeof message === "string"</tspan>

<tspan x="10" y="13850">-                // if message is a string, then leave it as is</tspan>

<tspan x="10" y="13866">+                // if message is a string, then leave as is</tspan>

<tspan x="10" y="13882">                 ? message</tspan>

<tspan x="10" y="13898">                 // else JSON.stringify message</tspan>

<tspan x="10" y="13914">-                : JSON.stringify(message, null, 4)</tspan>

<tspan x="10" y="13930">+                : JSON.stringify(message, undefined, 4)</tspan>

<tspan x="10" y="13946">             )</tspan>

<tspan x="10" y="13962">         );</tspan>

<tspan x="10" y="13978">-        throw error;</tspan>

<tspan x="10" y="13994">+        throw err;</tspan>

<tspan x="10" y="14010">+    };</tspan>

<tspan x="10" y="14026">+    local.coalesce = function (...argList) {</tspan>

<tspan x="10" y="14042">+    /*</tspan>

<tspan x="10" y="14058">+     * this function will coalesce null, undefined, or "" in &lt;argList&gt;</tspan>

<tspan x="10" y="14074">+     */</tspan>

<tspan x="10" y="14090">+        let arg;</tspan>

<tspan x="10" y="14106">+        let ii;</tspan>

<tspan x="10" y="14122">+        ii = 0;</tspan>

<tspan x="10" y="14138">+        while (ii &lt; argList.length) {</tspan>

<tspan x="10" y="14154">+            arg = argList[ii];</tspan>

<tspan x="10" y="14170">+            if (arg !== null &amp;&amp; arg !== undefined &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="14186">+                break;</tspan>

<tspan x="10" y="14202">+            }</tspan>

<tspan x="10" y="14218">+            ii += 1;</tspan>

<tspan x="10" y="14234">+        }</tspan>

<tspan x="10" y="14250">+        return arg;</tspan>

<tspan x="10" y="14266">+    };</tspan>

<tspan x="10" y="14282">+    local.fsRmrfSync = function (dir) {</tspan>

<tspan x="10" y="14298">+    /*</tspan>

<tspan x="10" y="14314">+     * this function will sync "rm -rf" &lt;dir&gt;</tspan>

<tspan x="10" y="14330">+     */</tspan>

<tspan x="10" y="14346">+        let child_process;</tspan>

<tspan x="10" y="14362">+        try {</tspan>

<tspan x="10" y="14378">+            child_process = require("child_process");</tspan>

<tspan x="10" y="14394">+        } catch (ignore) {</tspan>

<tspan x="10" y="14410">+            return;</tspan>

<tspan x="10" y="14426">+        }</tspan>

<tspan x="10" y="14442">+        child_process.spawnSync("rm", [</tspan>

<tspan x="10" y="14458">+            "-rf", dir</tspan>

<tspan x="10" y="14474">+        ], {</tspan>

<tspan x="10" y="14490">+            stdio: [</tspan>

<tspan x="10" y="14506">+                "ignore", 1, 2</tspan>

<tspan x="10" y="14522">+            ]</tspan>

<tspan x="10" y="14538">+        });</tspan>

<tspan x="10" y="14554">+    };</tspan>

<tspan x="10" y="14570">+    local.fsWriteFileWithMkdirpSync = function (file, data) {</tspan>

<tspan x="10" y="14586">+    /*</tspan>

<tspan x="10" y="14602">+     * this function will sync write &lt;data&gt; to &lt;file&gt; with "mkdir -p"</tspan>

<tspan x="10" y="14618">+     */</tspan>

<tspan x="10" y="14634">+        let fs;</tspan>

<tspan x="10" y="14650">+        try {</tspan>

<tspan x="10" y="14666">+            fs = require("fs");</tspan>

<tspan x="10" y="14682">+        } catch (ignore) {</tspan>

<tspan x="10" y="14698">+            return;</tspan>

<tspan x="10" y="14714">+        }</tspan>

<tspan x="10" y="14730">+        // try to write file</tspan>

<tspan x="10" y="14746">+        try {</tspan>

<tspan x="10" y="14762">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="14778">+        } catch (ignore) {</tspan>

<tspan x="10" y="14794">+            // mkdir -p</tspan>

<tspan x="10" y="14810">+            require("child_process").spawnSync(</tspan>

<tspan x="10" y="14826">+                "mkdir",</tspan>

<tspan x="10" y="14842">+                [</tspan>

<tspan x="10" y="14858">+                    "-p", require("path").dirname(file)</tspan>

<tspan x="10" y="14874">+                ],</tspan>

<tspan x="10" y="14890">+                {</tspan>

<tspan x="10" y="14906">+                    stdio: [</tspan>

<tspan x="10" y="14922">+                        "ignore", 1, 2</tspan>

<tspan x="10" y="14938">+                    ]</tspan>

<tspan x="10" y="14954">+                }</tspan>

<tspan x="10" y="14970">+            );</tspan>

<tspan x="10" y="14986">+            // rewrite file</tspan>

<tspan x="10" y="15002">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="15018">+        }</tspan>

<tspan x="10" y="15034">     };</tspan>

<tspan x="10" y="15050">     local.functionOrNop = function (fnc) {</tspan>

<tspan x="10" y="15066">     /*</tspan>

<tspan x="10" y="15082">      * this function will if &lt;fnc&gt; exists,</tspan>

<tspan x="10" y="15098">-     * them return &lt;fnc&gt;,</tspan>

<tspan x="10" y="15114">+     * return &lt;fnc&gt;,</tspan>

<tspan x="10" y="15130">      * else return &lt;nop&gt;</tspan>

<tspan x="10" y="15146">      */</tspan>

<tspan x="10" y="15162">         return fnc || local.nop;</tspan>

<tspan x="10" y="15178">     };</tspan>

<tspan x="10" y="15194">-    local.identity = function (value) {</tspan>

<tspan x="10" y="15210">+    local.identity = function (val) {</tspan>

<tspan x="10" y="15226">     /*</tspan>

<tspan x="10" y="15242">-     * this function will return &lt;value&gt;</tspan>

<tspan x="10" y="15258">+     * this function will return &lt;val&gt;</tspan>

<tspan x="10" y="15274">      */</tspan>

<tspan x="10" y="15290">-        return value;</tspan>

<tspan x="10" y="15306">+        return val;</tspan>

<tspan x="10" y="15322">     };</tspan>

<tspan x="10" y="15338">     local.nop = function () {</tspan>

<tspan x="10" y="15354">     /*</tspan>

<tspan x="10" y="15370">@@ -103,11 +314,11 @@</tspan>

<tspan x="10" y="15386">     };</tspan>

<tspan x="10" y="15402">     local.objectAssignDefault = function (target, source) {</tspan>

<tspan x="10" y="15418">     /*</tspan>

<tspan x="10" y="15434">-     * this function will if items from &lt;target&gt; are</tspan>

<tspan x="10" y="15450">-     * null, undefined, or empty-string,</tspan>

<tspan x="10" y="15466">+     * this function will if items from &lt;target&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="15482">      * then overwrite them with items from &lt;source&gt;</tspan>

<tspan x="10" y="15498">      */</tspan>

<tspan x="10" y="15514">-        Object.keys(source).forEach(function (key) {</tspan>

<tspan x="10" y="15530">+        target = target || {};</tspan>

<tspan x="10" y="15546">+        Object.keys(source || {}).forEach(function (key) {</tspan>

<tspan x="10" y="15562">             if (</tspan>

<tspan x="10" y="15578">                 target[key] === null</tspan>

<tspan x="10" y="15594">                 || target[key] === undefined</tspan>

<tspan x="10" y="15610">@@ -118,6 +329,26 @@</tspan>

<tspan x="10" y="15626">         });</tspan>

<tspan x="10" y="15642">         return target;</tspan>

<tspan x="10" y="15658">     };</tspan>

<tspan x="10" y="15674">+    local.querySelector = function (selectors) {</tspan>

<tspan x="10" y="15690">+    /*</tspan>

<tspan x="10" y="15706">+     * this function will return first dom-elem that match &lt;selectors&gt;</tspan>

<tspan x="10" y="15722">+     */</tspan>

<tspan x="10" y="15738">+        return (</tspan>

<tspan x="10" y="15754">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="15770">+            &amp;&amp; typeof document.querySelector === "function"</tspan>

<tspan x="10" y="15786">+            &amp;&amp; document.querySelector(selectors)</tspan>

<tspan x="10" y="15802">+        ) || {};</tspan>

<tspan x="10" y="15818">+    };</tspan>

<tspan x="10" y="15834">+    local.querySelectorAll = function (selectors) {</tspan>

<tspan x="10" y="15850">+    /*</tspan>

<tspan x="10" y="15866">+     * this function will return dom-elem-list that match &lt;selectors&gt;</tspan>

<tspan x="10" y="15882">+     */</tspan>

<tspan x="10" y="15898">+        return (</tspan>

<tspan x="10" y="15914">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="15930">+            &amp;&amp; typeof document.querySelectorAll === "function"</tspan>

<tspan x="10" y="15946">+            &amp;&amp; Array.from(document.querySelectorAll(selectors))</tspan>

<tspan x="10" y="15962">+        ) || [];</tspan>

<tspan x="10" y="15978">+    };</tspan>

<tspan x="10" y="15994">     // require builtin</tspan>

<tspan x="10" y="16010">     if (!local.isBrowser) {</tspan>

<tspan x="10" y="16026">         local.assert = require("assert");</tspan>

<tspan x="10" y="16042">@@ -148,7 +379,10 @@</tspan>

<tspan x="10" y="16058">         local.vm = require("vm");</tspan>

<tspan x="10" y="16074">         local.zlib = require("zlib");</tspan>

<tspan x="10" y="16090">     }</tspan>

<tspan x="10" y="16106">-}(this));</tspan>

<tspan x="10" y="16122">+}((typeof globalThis === "object" &amp;&amp; globalThis) || (function () {</tspan>

<tspan x="10" y="16138">+    return Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="16154">+}())));</tspan>

<tspan x="10" y="16170">+// assets.utility2.header.js - end</tspan>

<tspan x="10" y="16186"> </tspan>

<tspan x="10" y="16202"> </tspan>

<tspan x="10" y="16218"> </tspan>

<tspan x="10" y="16234">@@ -198,7 +432,4 @@</tspan>

<tspan x="10" y="16250">     );</tspan>

<tspan x="10" y="16266"> });</tspan>

<tspan x="10" y="16282"> }());</tspan>

<tspan x="10" y="16298">-</tspan>

<tspan x="10" y="16314">-</tspan>

<tspan x="10" y="16330">-</tspan>

<tspan x="10" y="16346"> }());</tspan>

<tspan x="10" y="16362">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.b\</tspan>
<tspan x="10" y="16378">ootstrap.js</tspan>

<tspan x="10" y="16394">jslint - 174ms /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js</tspan>

<tspan x="10" y="16410">jslint - 1ms /tmp/npmTestPublished/node_modules/bootstrap-lite/npm_scripts.sh</tspan>

<tspan x="10" y="16426">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json.autofix.old	2020-01-20 21:40:\</tspan>
<tspan x="10" y="16442">12.946516006 +0000</tspan>

<tspan x="10" y="16458">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json	2020-01-20 21:40:12.946516006\</tspan>
<tspan x="10" y="16474"> +0000</tspan>

<tspan x="10" y="16490">@@ -1,71 +1,71 @@</tspan>

<tspan x="10" y="16506"> {</tspan>

<tspan x="10" y="16522">-  "_from": "bootstrap-lite",</tspan>

<tspan x="10" y="16538">-  "_id": "bootstrap-lite@2019.1.30",</tspan>

<tspan x="10" y="16554">-  "_inBundle": false,</tspan>

<tspan x="10" y="16570">-  "_integrity": "sha512-t3F6+b5OLY0tUJ4qYYzwrjKc8QPdZZM7nphNHvYQYoUNnnVtZi6H7dcb+ajBdHLVU6fufW0\</tspan>
<tspan x="10" y="16586">5rgJj2k5d00qpvA==",</tspan>

<tspan x="10" y="16602">-  "_location": "/bootstrap-lite",</tspan>

<tspan x="10" y="16618">-  "_phantomChildren": {},</tspan>

<tspan x="10" y="16634">-  "_requested": {</tspan>

<tspan x="10" y="16650">-    "type": "tag",</tspan>

<tspan x="10" y="16666">-    "registry": true,</tspan>

<tspan x="10" y="16682">-    "raw": "bootstrap-lite",</tspan>

<tspan x="10" y="16698">+    "_from": "bootstrap-lite",</tspan>

<tspan x="10" y="16714">+    "_id": "bootstrap-lite@2019.1.30",</tspan>

<tspan x="10" y="16730">+    "_inBundle": false,</tspan>

<tspan x="10" y="16746">+    "_integrity": "sha512-t3F6+b5OLY0tUJ4qYYzwrjKc8QPdZZM7nphNHvYQYoUNnnVtZi6H7dcb+ajBdHLVU6fuf\</tspan>
<tspan x="10" y="16762">W05rgJj2k5d00qpvA==",</tspan>

<tspan x="10" y="16778">+    "_location": "/bootstrap-lite",</tspan>

<tspan x="10" y="16794">+    "_phantomChildren": {},</tspan>

<tspan x="10" y="16810">+    "_requested": {</tspan>

<tspan x="10" y="16826">+        "escapedName": "bootstrap-lite",</tspan>

<tspan x="10" y="16842">+        "fetchSpec": "latest",</tspan>

<tspan x="10" y="16858">+        "name": "bootstrap-lite",</tspan>

<tspan x="10" y="16874">+        "raw": "bootstrap-lite",</tspan>

<tspan x="10" y="16890">+        "rawSpec": "",</tspan>

<tspan x="10" y="16906">+        "registry": true,</tspan>

<tspan x="10" y="16922">+        "saveSpec": null,</tspan>

<tspan x="10" y="16938">+        "type": "tag"</tspan>

<tspan x="10" y="16954">+    },</tspan>

<tspan x="10" y="16970">+    "_requiredBy_": [</tspan>

<tspan x="10" y="16986">+        "#USER",</tspan>

<tspan x="10" y="17002">+        "/"</tspan>

<tspan x="10" y="17018">+    ],</tspan>

<tspan x="10" y="17034">+    "_resolved": "https://registry.npmjs.org/bootstrap-lite/-/bootstrap-lite-2019.1.30.tgz",</tspan>

<tspan x="10" y="17050">+    "_shasum": "dd076017abe5fa1be7e22f966ec6ce418cc015b6",</tspan>

<tspan x="10" y="17066">+    "_spec": "bootstrap-lite",</tspan>

<tspan x="10" y="17082">+    "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="17098">+    "assetsList": "assets.bootstrap-v3.4.0.rollup.min.css assets.bootstrap-v3.4.0.rollup.min.js\</tspan>
<tspan x="10" y="17114">",</tspan>

<tspan x="10" y="17130">+    "author": {</tspan>

<tspan x="10" y="17146">+        "email": "kaizhu256@gmail.com",</tspan>

<tspan x="10" y="17162">+        "name": "kai zhu"</tspan>

<tspan x="10" y="17178">+    },</tspan>

<tspan x="10" y="17194">+    "bugs": {</tspan>

<tspan x="10" y="17210">+        "url": "https://github.com/kaizhu256/node-bootstrap-lite/issues"</tspan>

<tspan x="10" y="17226">+    },</tspan>

<tspan x="10" y="17242">+    "bundleDependencies": false,</tspan>

<tspan x="10" y="17258">+    "deprecated": false,</tspan>

<tspan x="10" y="17274">+    "description": "this zero-dependency package will provide 1) a rolled-up css (includes glyp\</tspan>
<tspan x="10" y="17290">hicons and theme), and 2) a rolled-up js (includes jquery) of twitter-bootstrap (v3.4.0), with a\</tspan>
<tspan x="10" y="17306"> working web-demo",</tspan>

<tspan x="10" y="17322">+    "devDependencies": {</tspan>

<tspan x="10" y="17338">+        "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="17354">+        "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="17370">+    },</tspan>

<tspan x="10" y="17386">+    "engines": {</tspan>

<tspan x="10" y="17402">+        "node": "&gt;=10.0"</tspan>

<tspan x="10" y="17418">+    },</tspan>

<tspan x="10" y="17434">+    "homepage": "https://github.com/kaizhu256/node-bootstrap-lite",</tspan>

<tspan x="10" y="17450">+    "keywords": [],</tspan>

<tspan x="10" y="17466">+    "license": "MIT",</tspan>

<tspan x="10" y="17482">+    "main": "lib.bootstrap.js",</tspan>

<tspan x="10" y="17498">     "name": "bootstrap-lite",</tspan>

<tspan x="10" y="17514">-    "escapedName": "bootstrap-lite",</tspan>

<tspan x="10" y="17530">-    "rawSpec": "",</tspan>

<tspan x="10" y="17546">-    "saveSpec": null,</tspan>

<tspan x="10" y="17562">-    "fetchSpec": "latest"</tspan>

<tspan x="10" y="17578">-  },</tspan>

<tspan x="10" y="17594">-  "_requiredBy_": [</tspan>

<tspan x="10" y="17610">-    "#USER",</tspan>

<tspan x="10" y="17626">-    "/"</tspan>

<tspan x="10" y="17642">-  ],</tspan>

<tspan x="10" y="17658">-  "_resolved": "https://registry.npmjs.org/bootstrap-lite/-/bootstrap-lite-2019.1.30.tgz",</tspan>

<tspan x="10" y="17674">-  "_shasum": "dd076017abe5fa1be7e22f966ec6ce418cc015b6",</tspan>

<tspan x="10" y="17690">-  "_spec": "bootstrap-lite",</tspan>

<tspan x="10" y="17706">-  "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="17722">-  "assetsList": "assets.bootstrap-v3.4.0.rollup.min.css assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="17738">-  "author": {</tspan>

<tspan x="10" y="17754">-    "name": "kai zhu",</tspan>

<tspan x="10" y="17770">-    "email": "kaizhu256@gmail.com"</tspan>

<tspan x="10" y="17786">-  },</tspan>

<tspan x="10" y="17802">-  "bugs": {</tspan>

<tspan x="10" y="17818">-    "url": "https://github.com/kaizhu256/node-bootstrap-lite/issues"</tspan>

<tspan x="10" y="17834">-  },</tspan>

<tspan x="10" y="17850">-  "bundleDependencies": false,</tspan>

<tspan x="10" y="17866">-  "deprecated": false,</tspan>

<tspan x="10" y="17882">-  "description": "this zero-dependency package will provide 1) a rolled-up css (includes glyphi\</tspan>
<tspan x="10" y="17898">cons and theme), and 2) a rolled-up js (includes jquery) of twitter-bootstrap (v3.4.0), with a w\</tspan>
<tspan x="10" y="17914">orking web-demo",</tspan>

<tspan x="10" y="17930">-  "devDependencies": {</tspan>

<tspan x="10" y="17946">-    "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="17962">-    "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="17978">-  },</tspan>

<tspan x="10" y="17994">-  "engines": {</tspan>

<tspan x="10" y="18010">-    "node": "&gt;=10.0"</tspan>

<tspan x="10" y="18026">-  },</tspan>

<tspan x="10" y="18042">-  "homepage": "https://github.com/kaizhu256/node-bootstrap-lite",</tspan>

<tspan x="10" y="18058">-  "keywords": [],</tspan>

<tspan x="10" y="18074">-  "license": "MIT",</tspan>

<tspan x="10" y="18090">-  "main": "lib.bootstrap.js",</tspan>

<tspan x="10" y="18106">-  "name": "bootstrap-lite",</tspan>

<tspan x="10" y="18122">-  "nameAliasPublish": "bootstrap-classic bootstrap3-lite",</tspan>

<tspan x="10" y="18138">-  "nameLib": "bootstrap",</tspan>

<tspan x="10" y="18154">-  "nameOriginal": "bootstrap-lite",</tspan>

<tspan x="10" y="18170">-  "os": [</tspan>

<tspan x="10" y="18186">-    "darwin",</tspan>

<tspan x="10" y="18202">-    "linux"</tspan>

<tspan x="10" y="18218">-  ],</tspan>

<tspan x="10" y="18234">-  "repository": {</tspan>

<tspan x="10" y="18250">-    "type": "git",</tspan>

<tspan x="10" y="18266">-    "url": "git+https://github.com/kaizhu256/node-bootstrap-lite.git"</tspan>

<tspan x="10" y="18282">-  },</tspan>

<tspan x="10" y="18298">-  "scripts": {</tspan>

<tspan x="10" y="18314">-    "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18330">-    "env": "env",</tspan>

<tspan x="10" y="18346">-    "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18362">-    "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18378">-    "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18394">-    "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18410">-    "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18426">-    "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="18442">-  },</tspan>

<tspan x="10" y="18458">-  "version": "2019.1.30"</tspan>

<tspan x="10" y="18474">+    "nameAliasPublish": "bootstrap-classic bootstrap3-lite",</tspan>

<tspan x="10" y="18490">+    "nameLib": "bootstrap",</tspan>

<tspan x="10" y="18506">+    "nameOriginal": "bootstrap-lite",</tspan>

<tspan x="10" y="18522">+    "os": [</tspan>

<tspan x="10" y="18538">+        "darwin",</tspan>

<tspan x="10" y="18554">+        "linux"</tspan>

<tspan x="10" y="18570">+    ],</tspan>

<tspan x="10" y="18586">+    "repository": {</tspan>

<tspan x="10" y="18602">+        "type": "git",</tspan>

<tspan x="10" y="18618">+        "url": "git+https://github.com/kaizhu256/node-bootstrap-lite.git"</tspan>

<tspan x="10" y="18634">+    },</tspan>

<tspan x="10" y="18650">+    "scripts": {</tspan>

<tspan x="10" y="18666">+        "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18682">+        "env": "env",</tspan>

<tspan x="10" y="18698">+        "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18714">+        "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18730">+        "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18746">+        "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18762">+        "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="18778">+        "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="18794">+    },</tspan>

<tspan x="10" y="18810">+    "version": "2019.1.30"</tspan>

<tspan x="10" y="18826"> }</tspan>

<tspan x="10" y="18842">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/packa\</tspan>
<tspan x="10" y="18858">ge.json</tspan>

<tspan x="10" y="18874">jslint - 51ms /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json</tspan>

<tspan x="10" y="18890">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js.autofix.old	2020-01-20 21:40:13.14\</tspan>
<tspan x="10" y="18906">6416013 +0000</tspan>

<tspan x="10" y="18922">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js	2020-01-20 21:40:13.146416013 +000\</tspan>
<tspan x="10" y="18938">0</tspan>

<tspan x="10" y="18954">@@ -172,13 +172,15 @@</tspan>

<tspan x="10" y="18970">     local.testCase_buildLib_default(option, local.onErrorThrow);</tspan>

<tspan x="10" y="18986">     local.testCase_buildTest_default(option, local.onErrorThrow);</tspan>

<tspan x="10" y="19002">     option = {</tspan>

<tspan x="10" y="19018">-        assetsList: [{</tspan>

<tspan x="10" y="19034">-            file: "/assets.bootstrap-v3.4.0.rollup.min.css",</tspan>

<tspan x="10" y="19050">-            url: "/assets.bootstrap-v3.4.0.rollup.min.css"</tspan>

<tspan x="10" y="19066">-        }, {</tspan>

<tspan x="10" y="19082">-            file: "/assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="19098">-            url: "/assets.bootstrap-v3.4.0.rollup.min.js"</tspan>

<tspan x="10" y="19114">-        }]</tspan>

<tspan x="10" y="19130">+        assetsList: [</tspan>

<tspan x="10" y="19146">+            {</tspan>

<tspan x="10" y="19162">+                file: "/assets.bootstrap-v3.4.0.rollup.min.css",</tspan>

<tspan x="10" y="19178">+                url: "/assets.bootstrap-v3.4.0.rollup.min.css"</tspan>

<tspan x="10" y="19194">+            }, {</tspan>

<tspan x="10" y="19210">+                file: "/assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="19226">+                url: "/assets.bootstrap-v3.4.0.rollup.min.js"</tspan>

<tspan x="10" y="19242">+            }</tspan>

<tspan x="10" y="19258">+        ]</tspan>

<tspan x="10" y="19274">     };</tspan>

<tspan x="10" y="19290">     local.buildApp(option, onError);</tspan>

<tspan x="10" y="19306"> };</tspan>

<tspan x="10" y="19322">@@ -194,9 +196,11 @@</tspan>

<tspan x="10" y="19338">     option = {};</tspan>

<tspan x="10" y="19354">     option.customize = function () {</tspan>

<tspan x="10" y="19370">         // search-and-replace - customize dataTo</tspan>

<tspan x="10" y="19386">-        [(</tspan>

<tspan x="10" y="19402">-            /\n\/\* jslint ignore:start \*\/\nlocal.assetsDict\["\/assets.index.template.html"\\</tspan>
<tspan x="10" y="19418">] = '\\\n[\S\s]*?\n\/\* jslint ignore:end \*\/\n/</tspan>

<tspan x="10" y="19434">-        )].forEach(function (rgx) {</tspan>

<tspan x="10" y="19450">+        [</tspan>

<tspan x="10" y="19466">+            (</tspan>

<tspan x="10" y="19482">+                /\n\/\* jslint ignore:start \*\/\nlocal.assetsDict\["\/assets.index.template.ht\</tspan>
<tspan x="10" y="19498">ml"\] = '\\\n[\S\s]*?\n\/\* jslint ignore:end \*\/\n/</tspan>

<tspan x="10" y="19514">+            )</tspan>

<tspan x="10" y="19530">+        ].forEach(function (rgx) {</tspan>

<tspan x="10" y="19546">             option.dataFrom.replace(rgx, function (match0) {</tspan>

<tspan x="10" y="19562">                 option.dataTo = option.dataTo.replace(rgx, match0);</tspan>

<tspan x="10" y="19578">             });</tspan>

<tspan x="10" y="19594">@@ -205,7 +209,4 @@</tspan>

<tspan x="10" y="19610">     local.buildReadme(option, onError);</tspan>

<tspan x="10" y="19626"> };</tspan>

<tspan x="10" y="19642"> }());</tspan>

<tspan x="10" y="19658">-</tspan>

<tspan x="10" y="19674">-</tspan>

<tspan x="10" y="19690">-</tspan>

<tspan x="10" y="19706"> }());</tspan>

<tspan x="10" y="19722">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/test.\</tspan>
<tspan x="10" y="19738">js</tspan>

<tspan x="10" y="19754">jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js</tspan>

<tspan x="10" y="19770">  1 Unexpected '.'. // line 153, column 53</tspan>

<tspan x="10" y="19786">    local = (globalThis.utility2 || require("utility2")).requireReadme();</tspan>

<tspan x="10" y="19802">{</tspan>

<tspan x="10" y="19818">    "name": "JSLintError",</tspan>

<tspan x="10" y="19834">    "column": 53,</tspan>

<tspan x="10" y="19850">    "line": 153,</tspan>

<tspan x="10" y="19866">    "code": "unexpected_a",</tspan>

<tspan x="10" y="19882">    "a": ".",</tspan>

<tspan x="10" y="19898">    "b": null,</tspan>

<tspan x="10" y="19914">    "message": "Unexpected '.'.",</tspan>

<tspan x="10" y="19930">    "source": "local = (globalThis.utility2 || require(\"utility2\")).requireReadme();",</tspan>

<tspan x="10" y="19946">    "ignore": null,</tspan>

<tspan x="10" y="19962">    "evidence": "local = (globalThis.utility2 || require(\"utility2\")).requireReadme();"</tspan>

<tspan x="10" y="19978">}</tspan>

<tspan x="10" y="19994">Error</tspan>

<tspan x="10" y="20010">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="20026">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="20042">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="20058">nt.js:11961:12)</tspan>

<tspan x="10" y="20074">    at warn (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.\</tspan>
<tspan x="10" y="20090">js:11983:29)</tspan>

<tspan x="10" y="20106">    at left_check (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.j\</tspan>
<tspan x="10" y="20122">slint.js:13642:9)</tspan>

<tspan x="10" y="20138">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:140\</tspan>
<tspan x="10" y="20154">17:9</tspan>

<tspan x="10" y="20170">    at Object.the_symbol.led (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/uti\</tspan>
<tspan x="10" y="20186">lity2/lib.jslint.js:13729:20)</tspan>

<tspan x="10" y="20202">    at right (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint\</tspan>
<tspan x="10" y="20218">.js:13328:31)</tspan>

<tspan x="10" y="20234">    at expression (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.j\</tspan>
<tspan x="10" y="20250">slint.js:13331:6)</tspan>

<tspan x="10" y="20266">    at Object.the_symbol.led (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/uti\</tspan>
<tspan x="10" y="20282">lity2/lib.jslint.js:13676:17)</tspan>

<tspan x="10" y="20298">    at right (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint\</tspan>
<tspan x="10" y="20314">.js:13328:31)</tspan>

<tspan x="10" y="20330">jslint - 179ms /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js</tspan>

<tspan x="10" y="20346"></tspan>

<tspan x="10" y="20362">DevTools listening on ws://127.0.0.1:33929/devtools/browser/29138fcc-9111-4f6d-a187-6d714a641832</tspan>

<tspan x="10" y="20378">[0120/214013.723526:ERROR:command_buffer_proxy_impl.cc(124)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="20394">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="20410">[0120/214013.723360:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="20426">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="20442">[0120/214013.725816:ERROR:command_buffer_proxy_impl.cc(124)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="20458">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="20474">http-server listening on port 65056</tspan>

<tspan x="10" y="20490">testRunDefault - 1611 ms - [node test-case 6 of 7 passed] - testCase_webpage_default</tspan>

<tspan x="10" y="20506">testRunDefault - 6022 ms - testCase pending - testCase_buildApp_default ...</tspan>

<tspan x="10" y="20522">testRunDefault - 6237 ms - [node test-case 7 of 7 passed] - testCase_buildApp_default</tspan>

<tspan x="10" y="20538">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="20554">File                   |   % Stmts |% Branches |   % Funcs |   % Lines |</tspan>

<tspan x="10" y="20570">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="20586">   bootstrap-lite/     |     98.59 |      98.5 |       100 |     98.59 |</tspan>

<tspan x="10" y="20602">      example.js       |       100 |       100 |       100 |       100 |</tspan>

<tspan x="10" y="20618">      lib.bootstrap.js |       100 |       100 |       100 |       100 |</tspan>

<tspan x="10" y="20634">      test.js          |      95.6 |     93.94 |       100 |      95.6 |</tspan>

<tspan x="10" y="20650">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="20666">All files              |     98.59 |      98.5 |       100 |     98.59 |</tspan>

<tspan x="10" y="20682">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="20698"></tspan>

<tspan x="10" y="20714">created coverage file /tmp/npmTestPublished/node_modules/bootstrap-lite/tmp/build/coverage.html/\</tspan>
<tspan x="10" y="20730">index.html</tspan>

<tspan x="10" y="20746"></tspan>

<tspan x="10" y="20762">-------------------------------------------------------</tspan>

<tspan x="10" y="20778">| test-report - npmTestPublished - node - linux v13.6.0 - 2020-01-20T21:40:12.278Z</tspan>

<tspan x="10" y="20794">|    6238 ms            0 failed        7 passed      |</tspan>

<tspan x="10" y="20810">-------------------------------------------------------</tspan>

<tspan x="10" y="20826"></tspan>

<tspan x="10" y="20842">created test-report file /tmp/npmTestPublished/node_modules/bootstrap-lite/tmp/build/test-report\</tspan>
<tspan x="10" y="20858">.html</tspan>

<tspan x="10" y="20874"></tspan>

<tspan x="10" y="20890"></tspan>

<tspan x="10" y="20906">npmTestPublished - 0 failed tests</tspan>

<tspan x="10" y="20922"></tspan>

<tspan x="10" y="20938"></tspan>

<tspan x="10" y="20954">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-01-20T21:40:19.067Z - EXIT_CODE - 0</tspan>

</text>
</svg>
