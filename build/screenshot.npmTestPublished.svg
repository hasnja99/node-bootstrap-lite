<svg height="12958" width="720" xmlns="http://www.w3.org/2000/svg">
<rect height="12958" fill="#555" width="720"></rect>
<text fill="#7f7" font-family="Courier New" font-size="12" xml:space="preserve">
<tspan x="10" y="26"></tspan>

<tspan x="10" y="42">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-01-20T21:59:18.261Z - npm-testing /tmp/npmTe\</tspan>
<tspan x="10" y="58">stPublished/node_modules/bootstrap-lite</tspan>

<tspan x="10" y="74"></tspan>

<tspan x="10" y="90"></tspan>

<tspan x="10" y="106">covering $ /home/travis/.nvm/versions/node/v13.6.0/bin/node /tmp/npmTestPublished/node_modules/b\</tspan>
<tspan x="10" y="122">ootstrap-lite/test.js</tspan>

<tspan x="10" y="138">&gt; jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/example.js</tspan>

<tspan x="10" y="154">  1 Unexpected space between ']' and '.'. // line 1185, column 1</tspan>

<tspan x="10" y="170">    .replace((</tspan>

<tspan x="10" y="186">{</tspan>

<tspan x="10" y="202">    "name": "JSLintError",</tspan>

<tspan x="10" y="218">    "column": 1,</tspan>

<tspan x="10" y="234">    "line": 1185,</tspan>

<tspan x="10" y="250">    "code": "unexpected_space_a_b",</tspan>

<tspan x="10" y="266">    "a": "]",</tspan>

<tspan x="10" y="282">    "b": ".",</tspan>

<tspan x="10" y="298">    "message": "Unexpected space between ']' and '.'.",</tspan>

<tspan x="10" y="314">    "source": ".replace((",</tspan>

<tspan x="10" y="330">    "ignore": null,</tspan>

<tspan x="10" y="346">    "evidence": ".replace(("</tspan>

<tspan x="10" y="362">}</tspan>

<tspan x="10" y="378">Error</tspan>

<tspan x="10" y="394">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="410">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="426">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="442">nt.js:11961:12)</tspan>

<tspan x="10" y="458">    at warn (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.\</tspan>
<tspan x="10" y="474">js:11983:29)</tspan>

<tspan x="10" y="490">    at no_space_only (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="506">b.jslint.js:16047:13)</tspan>

<tspan x="10" y="522">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:162\</tspan>
<tspan x="10" y="538">52:25</tspan>

<tspan x="10" y="554">    at Array.forEach (&lt;anonymous&gt;)</tspan>

<tspan x="10" y="570">    at whitage (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="586">nt.js:16116:12)</tspan>

<tspan x="10" y="602">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:164\</tspan>
<tspan x="10" y="618">30:21</tspan>

<tspan x="10" y="634">    at Object.jslint_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utili\</tspan>
<tspan x="10" y="650">ty2/lib.jslint.js:16498:21)</tspan>

<tspan x="10" y="666">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="682">es/utility2/lib.jslint.js:16814:38)</tspan>

<tspan x="10" y="698">http-server listening on port 44259</tspan>

<tspan x="10" y="714">testRunDefault - 5 ms - [node test-case 1 of 7 passed] - testCase_buildApidoc_default</tspan>

<tspan x="10" y="730">jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md.&lt;```javascript&gt;.js</tspan>

<tspan x="10" y="746">  1 Line is longer than 80 characters. // line 1184, column 81</tspan>

<tspan x="10" y="762">    local.assetsDict["/"] = local.assetsDict["/assets.index.template.html"].repl</tspan>

<tspan x="10" y="778">{</tspan>

<tspan x="10" y="794">    "name": "JSLintError",</tspan>

<tspan x="10" y="810">    "column": 81,</tspan>

<tspan x="10" y="826">    "line": 1184,</tspan>

<tspan x="10" y="842">    "code": "too_long",</tspan>

<tspan x="10" y="858">    "message": "Line is longer than 80 characters.",</tspan>

<tspan x="10" y="874">    "source": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].repla\</tspan>
<tspan x="10" y="890">ce((",</tspan>

<tspan x="10" y="906">    "ignore": null,</tspan>

<tspan x="10" y="922">    "a": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].replace(("\</tspan>
<tspan x="10" y="938">,</tspan>

<tspan x="10" y="954">    "evidence": "local.assetsDict[\"/\"] = local.assetsDict[\"/assets.index.template.html\"].rep\</tspan>
<tspan x="10" y="970">lace(("</tspan>

<tspan x="10" y="986">}</tspan>

<tspan x="10" y="1002">Error</tspan>

<tspan x="10" y="1018">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="1034">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="1050">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="1066">nt.js:11961:12)</tspan>

<tspan x="10" y="1082">    at next_line (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.js\</tspan>
<tspan x="10" y="1098">lint.js:12066:13)</tspan>

<tspan x="10" y="1114">    at lex (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.j\</tspan>
<tspan x="10" y="1130">s:12732:27)</tspan>

<tspan x="10" y="1146">    at tokenize (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsl\</tspan>
<tspan x="10" y="1162">int.js:12981:13)</tspan>

<tspan x="10" y="1178">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:163\</tspan>
<tspan x="10" y="1194">97:9</tspan>

<tspan x="10" y="1210">    at Object.jslint_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utili\</tspan>
<tspan x="10" y="1226">ty2/lib.jslint.js:16498:21)</tspan>

<tspan x="10" y="1242">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1258">es/utility2/lib.jslint.js:16814:38)</tspan>

<tspan x="10" y="1274">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1290">es/utility2/lib.jslint.js:16949:18)</tspan>

<tspan x="10" y="1306">    at Object.local.jslintAndPrint (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modul\</tspan>
<tspan x="10" y="1322">es/utility2/lib.jslint.js:16949:18)</tspan>

<tspan x="10" y="1338">testRunDefault - 43 ms - [node test-case 2 of 7 passed] - testCase_buildLib_default</tspan>

<tspan x="10" y="1354">testRunDefault - 59 ms - [node test-case 3 of 7 passed] - testCase_buildReadme_default</tspan>

<tspan x="10" y="1370">testRunDefault - 60 ms - [node test-case 4 of 7 passed] - testCase_buildTest_default</tspan>

<tspan x="10" y="1386">testRunDefault - 60 ms - [node test-case 5 of 7 passed] - testCase_nop_default</tspan>

<tspan x="10" y="1402">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md.autofix.old	2020-01-20 21:59:18.\</tspan>
<tspan x="10" y="1418">844845497 +0000</tspan>

<tspan x="10" y="1434">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md	2020-01-20 21:59:18.844845497 +0\</tspan>
<tspan x="10" y="1450">000</tspan>

<tspan x="10" y="1466">@@ -1181,8 +1181,7 @@</tspan>

<tspan x="10" y="1482"> ).replace((/^#!\//), "// ");</tspan>

<tspan x="10" y="1498"> /* jslint ignore:end */</tspan>

<tspan x="10" y="1514"> /* validateLineSortedReset */</tspan>

<tspan x="10" y="1530">-local.assetsDict["/"] = local.assetsDict["/assets.index.template.html"]</tspan>

<tspan x="10" y="1546">-.replace((</tspan>

<tspan x="10" y="1562">+local.assetsDict["/"] = local.assetsDict["/assets.index.template.html"].replace((</tspan>

<tspan x="10" y="1578">     /\{\{env\.(\w+?)\}\}/g</tspan>

<tspan x="10" y="1594"> ), function (match0, match1) {</tspan>

<tspan x="10" y="1610">     switch (match1) {</tspan>

<tspan x="10" y="1626">@@ -1231,9 +1230,6 @@</tspan>

<tspan x="10" y="1642">     response.end();</tspan>

<tspan x="10" y="1658"> }).listen(process.env.PORT);</tspan>

<tspan x="10" y="1674"> }());</tspan>

<tspan x="10" y="1690">-</tspan>

<tspan x="10" y="1706">-</tspan>

<tspan x="10" y="1722">-</tspan>

<tspan x="10" y="1738"> }());</tspan>

<tspan x="10" y="1754"> ```</tspan>

<tspan x="10" y="1770"> </tspan>

<tspan x="10" y="1786">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/READM\</tspan>
<tspan x="10" y="1802">E.md</tspan>

<tspan x="10" y="1818">jslint - 198ms /tmp/npmTestPublished/node_modules/bootstrap-lite/README.md</tspan>

<tspan x="10" y="1834">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js.autofix.old	2020-01-20 21\</tspan>
<tspan x="10" y="1850">:59:19.016845497 +0000</tspan>

<tspan x="10" y="1866">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js	2020-01-20 21:59:19.01684\</tspan>
<tspan x="10" y="1882">5497 +0000</tspan>

<tspan x="10" y="1898">@@ -9,91 +9,302 @@</tspan>

<tspan x="10" y="1914"> </tspan>

<tspan x="10" y="1930"> </tspan>

<tspan x="10" y="1946"> /* istanbul instrument in package bootstrap */</tspan>

<tspan x="10" y="1962">+// assets.utility2.header.js - start</tspan>

<tspan x="10" y="1978"> /* istanbul ignore next */</tspan>

<tspan x="10" y="1994"> /* jslint utility2:true */</tspan>

<tspan x="10" y="2010"> (function (globalThis) {</tspan>

<tspan x="10" y="2026">     "use strict";</tspan>

<tspan x="10" y="2042">-    var consoleError;</tspan>

<tspan x="10" y="2058">-    var local;</tspan>

<tspan x="10" y="2074">+    let ArrayPrototypeFlat;</tspan>

<tspan x="10" y="2090">+    let TextXxcoder;</tspan>

<tspan x="10" y="2106">+    let consoleError;</tspan>

<tspan x="10" y="2122">+    let debugName;</tspan>

<tspan x="10" y="2138">+    let local;</tspan>

<tspan x="10" y="2154">+    debugName = "debug" + String("Inline");</tspan>

<tspan x="10" y="2170">     // init globalThis</tspan>

<tspan x="10" y="2186">-    (function () {</tspan>

<tspan x="10" y="2202">-        try {</tspan>

<tspan x="10" y="2218">-            globalThis = Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="2234">-        } catch (ignore) {}</tspan>

<tspan x="10" y="2250">-    }());</tspan>

<tspan x="10" y="2266">-    globalThis.globalThis = globalThis;</tspan>

<tspan x="10" y="2282">+    globalThis.globalThis = globalThis.globalThis || globalThis;</tspan>

<tspan x="10" y="2298">     // init debug_inline</tspan>

<tspan x="10" y="2314">-    if (!globalThis["debugInline"]) {</tspan>

<tspan x="10" y="2330">+    if (!globalThis[debugName]) {</tspan>

<tspan x="10" y="2346">         consoleError = console.error;</tspan>

<tspan x="10" y="2362">-        globalThis["debugInline"] = function () {</tspan>

<tspan x="10" y="2378">+        globalThis[debugName] = function (...argList) {</tspan>

<tspan x="10" y="2394">         /*</tspan>

<tspan x="10" y="2410">-         * this function will both print &lt;arguments&gt; to stderr</tspan>

<tspan x="10" y="2426">-         * and return &lt;arguments&gt;[0]</tspan>

<tspan x="10" y="2442">+         * this function will both print &lt;argList&gt; to stderr</tspan>

<tspan x="10" y="2458">+         * and return &lt;argList&gt;[0]</tspan>

<tspan x="10" y="2474">          */</tspan>

<tspan x="10" y="2490">-            var argList;</tspan>

<tspan x="10" y="2506">-            argList = Array.from(arguments); // jslint ignore:line</tspan>

<tspan x="10" y="2522">-            // debug arguments</tspan>

<tspan x="10" y="2538">-            globalThis["debugInlineArguments"] = argList;</tspan>

<tspan x="10" y="2554">-            consoleError("\n\ndebugInline");</tspan>

<tspan x="10" y="2570">+            consoleError("\n\n" + debugName);</tspan>

<tspan x="10" y="2586">             consoleError.apply(console, argList);</tspan>

<tspan x="10" y="2602">             consoleError("\n");</tspan>

<tspan x="10" y="2618">             // return arg0 for inspection</tspan>

<tspan x="10" y="2634">             return argList[0];</tspan>

<tspan x="10" y="2650">         };</tspan>

<tspan x="10" y="2666">     }</tspan>

<tspan x="10" y="2682">+    // polyfill</tspan>

<tspan x="10" y="2698">+    ArrayPrototypeFlat = function (depth) {</tspan>

<tspan x="10" y="2714">+    /*</tspan>

<tspan x="10" y="2730">+     * this function will polyfill Array.prototype.flat</tspan>

<tspan x="10" y="2746">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="2762">+     */</tspan>

<tspan x="10" y="2778">+        depth = (</tspan>

<tspan x="10" y="2794">+            globalThis.isNaN(depth)</tspan>

<tspan x="10" y="2810">+            ? 1</tspan>

<tspan x="10" y="2826">+            : Number(depth)</tspan>

<tspan x="10" y="2842">+        );</tspan>

<tspan x="10" y="2858">+        if (!depth) {</tspan>

<tspan x="10" y="2874">+            return Array.prototype.slice.call(this);</tspan>

<tspan x="10" y="2890">+        }</tspan>

<tspan x="10" y="2906">+        return Array.prototype.reduce.call(this, function (acc, cur) {</tspan>

<tspan x="10" y="2922">+            if (Array.isArray(cur)) {</tspan>

<tspan x="10" y="2938">+                // recurse</tspan>

<tspan x="10" y="2954">+                acc.push.apply(acc, ArrayPrototypeFlat.call(cur, depth - 1));</tspan>

<tspan x="10" y="2970">+            } else {</tspan>

<tspan x="10" y="2986">+                acc.push(cur);</tspan>

<tspan x="10" y="3002">+            }</tspan>

<tspan x="10" y="3018">+            return acc;</tspan>

<tspan x="10" y="3034">+        }, []);</tspan>

<tspan x="10" y="3050">+    };</tspan>

<tspan x="10" y="3066">+    Array.prototype.flat = Array.prototype.flat || ArrayPrototypeFlat;</tspan>

<tspan x="10" y="3082">+    Array.prototype.flatMap = Array.prototype.flatMap || function flatMap(</tspan>

<tspan x="10" y="3098">+        ...argList</tspan>

<tspan x="10" y="3114">+    ) {</tspan>

<tspan x="10" y="3130">+    /*</tspan>

<tspan x="10" y="3146">+     * this function will polyfill Array.prototype.flatMap</tspan>

<tspan x="10" y="3162">+     * https://github.com/jonathantneal/array-flat-polyfill</tspan>

<tspan x="10" y="3178">+     */</tspan>

<tspan x="10" y="3194">+        return this.map(...argList).flat();</tspan>

<tspan x="10" y="3210">+    };</tspan>

<tspan x="10" y="3226">+    String.prototype.trimEnd = (</tspan>

<tspan x="10" y="3242">+        String.prototype.trimEnd || String.prototype.trimRight</tspan>

<tspan x="10" y="3258">+    );</tspan>

<tspan x="10" y="3274">+    String.prototype.trimStart = (</tspan>

<tspan x="10" y="3290">+        String.prototype.trimStart || String.prototype.trimLeft</tspan>

<tspan x="10" y="3306">+    );</tspan>

<tspan x="10" y="3322">+    (function () {</tspan>

<tspan x="10" y="3338">+        try {</tspan>

<tspan x="10" y="3354">+            globalThis.TextDecoder = (</tspan>

<tspan x="10" y="3370">+                globalThis.TextDecoder || require("util").TextDecoder</tspan>

<tspan x="10" y="3386">+            );</tspan>

<tspan x="10" y="3402">+            globalThis.TextEncoder = (</tspan>

<tspan x="10" y="3418">+                globalThis.TextEncoder || require("util").TextEncoder</tspan>

<tspan x="10" y="3434">+            );</tspan>

<tspan x="10" y="3450">+        } catch (ignore) {}</tspan>

<tspan x="10" y="3466">+    }());</tspan>

<tspan x="10" y="3482">+    TextXxcoder = function () {</tspan>

<tspan x="10" y="3498">+    /*</tspan>

<tspan x="10" y="3514">+     * this function will polyfill TextDecoder/TextEncoder</tspan>

<tspan x="10" y="3530">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="3546">+     */</tspan>

<tspan x="10" y="3562">+        return;</tspan>

<tspan x="10" y="3578">+    };</tspan>

<tspan x="10" y="3594">+    TextXxcoder.prototype.decode = function (octets) {</tspan>

<tspan x="10" y="3610">+    /*</tspan>

<tspan x="10" y="3626">+     * this function will polyfill TextDecoder.prototype.decode</tspan>

<tspan x="10" y="3642">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="3658">+     */</tspan>

<tspan x="10" y="3674">+        let bytesNeeded;</tspan>

<tspan x="10" y="3690">+        let codePoint;</tspan>

<tspan x="10" y="3706">+        let ii;</tspan>

<tspan x="10" y="3722">+        let kk;</tspan>

<tspan x="10" y="3738">+        let octet;</tspan>

<tspan x="10" y="3754">+        let string;</tspan>

<tspan x="10" y="3770">+        string = "";</tspan>

<tspan x="10" y="3786">+        ii = 0;</tspan>

<tspan x="10" y="3802">+        while (ii &lt; octets.length) {</tspan>

<tspan x="10" y="3818">+            octet = octets[ii];</tspan>

<tspan x="10" y="3834">+            bytesNeeded = 0;</tspan>

<tspan x="10" y="3850">+            codePoint = 0;</tspan>

<tspan x="10" y="3866">+            if (octet &lt;= 0x7F) {</tspan>

<tspan x="10" y="3882">+                bytesNeeded = 0;</tspan>

<tspan x="10" y="3898">+                codePoint = octet &amp; 0xFF;</tspan>

<tspan x="10" y="3914">+            } else if (octet &lt;= 0xDF) {</tspan>

<tspan x="10" y="3930">+                bytesNeeded = 1;</tspan>

<tspan x="10" y="3946">+                codePoint = octet &amp; 0x1F;</tspan>

<tspan x="10" y="3962">+            } else if (octet &lt;= 0xEF) {</tspan>

<tspan x="10" y="3978">+                bytesNeeded = 2;</tspan>

<tspan x="10" y="3994">+                codePoint = octet &amp; 0x0F;</tspan>

<tspan x="10" y="4010">+            } else if (octet &lt;= 0xF4) {</tspan>

<tspan x="10" y="4026">+                bytesNeeded = 3;</tspan>

<tspan x="10" y="4042">+                codePoint = octet &amp; 0x07;</tspan>

<tspan x="10" y="4058">+            }</tspan>

<tspan x="10" y="4074">+            if (octets.length - ii - bytesNeeded &gt; 0) {</tspan>

<tspan x="10" y="4090">+                kk = 0;</tspan>

<tspan x="10" y="4106">+                while (kk &lt; bytesNeeded) {</tspan>

<tspan x="10" y="4122">+                    octet = octets[ii + kk + 1];</tspan>

<tspan x="10" y="4138">+                    codePoint = (codePoint &lt;&lt; 6) | (octet &amp; 0x3F);</tspan>

<tspan x="10" y="4154">+                    kk += 1;</tspan>

<tspan x="10" y="4170">+                }</tspan>

<tspan x="10" y="4186">+            } else {</tspan>

<tspan x="10" y="4202">+                codePoint = 0xFFFD;</tspan>

<tspan x="10" y="4218">+                bytesNeeded = octets.length - ii;</tspan>

<tspan x="10" y="4234">+            }</tspan>

<tspan x="10" y="4250">+            string += String.fromCodePoint(codePoint);</tspan>

<tspan x="10" y="4266">+            ii += bytesNeeded + 1;</tspan>

<tspan x="10" y="4282">+        }</tspan>

<tspan x="10" y="4298">+        return string;</tspan>

<tspan x="10" y="4314">+    };</tspan>

<tspan x="10" y="4330">+    TextXxcoder.prototype.encode = function (string) {</tspan>

<tspan x="10" y="4346">+    /*</tspan>

<tspan x="10" y="4362">+     * this function will polyfill TextEncoder.prototype.encode</tspan>

<tspan x="10" y="4378">+     * https://gist.github.com/Yaffle/5458286</tspan>

<tspan x="10" y="4394">+     */</tspan>

<tspan x="10" y="4410">+        let bits;</tspan>

<tspan x="10" y="4426">+        let cc;</tspan>

<tspan x="10" y="4442">+        let codePoint;</tspan>

<tspan x="10" y="4458">+        let ii;</tspan>

<tspan x="10" y="4474">+        let length;</tspan>

<tspan x="10" y="4490">+        let octets;</tspan>

<tspan x="10" y="4506">+        octets = [];</tspan>

<tspan x="10" y="4522">+        length = string.length;</tspan>

<tspan x="10" y="4538">+        ii = 0;</tspan>

<tspan x="10" y="4554">+        while (ii &lt; length) {</tspan>

<tspan x="10" y="4570">+            codePoint = string.codePointAt(ii);</tspan>

<tspan x="10" y="4586">+            cc = 0;</tspan>

<tspan x="10" y="4602">+            bits = 0;</tspan>

<tspan x="10" y="4618">+            if (codePoint &lt;= 0x0000007F) {</tspan>

<tspan x="10" y="4634">+                cc = 0;</tspan>

<tspan x="10" y="4650">+                bits = 0x00;</tspan>

<tspan x="10" y="4666">+            } else if (codePoint &lt;= 0x000007FF) {</tspan>

<tspan x="10" y="4682">+                cc = 6;</tspan>

<tspan x="10" y="4698">+                bits = 0xC0;</tspan>

<tspan x="10" y="4714">+            } else if (codePoint &lt;= 0x0000FFFF) {</tspan>

<tspan x="10" y="4730">+                cc = 12;</tspan>

<tspan x="10" y="4746">+                bits = 0xE0;</tspan>

<tspan x="10" y="4762">+            } else if (codePoint &lt;= 0x001FFFFF) {</tspan>

<tspan x="10" y="4778">+                cc = 18;</tspan>

<tspan x="10" y="4794">+                bits = 0xF0;</tspan>

<tspan x="10" y="4810">+            }</tspan>

<tspan x="10" y="4826">+            octets.push(bits | (codePoint &gt;&gt; cc));</tspan>

<tspan x="10" y="4842">+            cc -= 6;</tspan>

<tspan x="10" y="4858">+            while (cc &gt;= 0) {</tspan>

<tspan x="10" y="4874">+                octets.push(0x80 | ((codePoint &gt;&gt; cc) &amp; 0x3F));</tspan>

<tspan x="10" y="4890">+                cc -= 6;</tspan>

<tspan x="10" y="4906">+            }</tspan>

<tspan x="10" y="4922">+            ii += (</tspan>

<tspan x="10" y="4938">+                codePoint &gt;= 0x10000</tspan>

<tspan x="10" y="4954">+                ? 2</tspan>

<tspan x="10" y="4970">+                : 1</tspan>

<tspan x="10" y="4986">+            );</tspan>

<tspan x="10" y="5002">+        }</tspan>

<tspan x="10" y="5018">+        return octets;</tspan>

<tspan x="10" y="5034">+    };</tspan>

<tspan x="10" y="5050">+    globalThis.TextDecoder = globalThis.TextDecoder || TextXxcoder;</tspan>

<tspan x="10" y="5066">+    globalThis.TextEncoder = globalThis.TextEncoder || TextXxcoder;</tspan>

<tspan x="10" y="5082">     // init local</tspan>

<tspan x="10" y="5098">     local = {};</tspan>

<tspan x="10" y="5114">     local.local = local;</tspan>

<tspan x="10" y="5130">     globalThis.globalLocal = local;</tspan>

<tspan x="10" y="5146">     // init isBrowser</tspan>

<tspan x="10" y="5162">     local.isBrowser = (</tspan>

<tspan x="10" y="5178">-        typeof window === "object"</tspan>

<tspan x="10" y="5194">-        &amp;&amp; window === globalThis</tspan>

<tspan x="10" y="5210">-        &amp;&amp; typeof window.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="5226">-        &amp;&amp; window.document</tspan>

<tspan x="10" y="5242">-        &amp;&amp; typeof window.document.querySelector === "function"</tspan>

<tspan x="10" y="5258">+        typeof globalThis.XMLHttpRequest === "function"</tspan>

<tspan x="10" y="5274">+        &amp;&amp; globalThis.navigator</tspan>

<tspan x="10" y="5290">+        &amp;&amp; typeof globalThis.navigator.userAgent === "string"</tspan>

<tspan x="10" y="5306">+    );</tspan>

<tspan x="10" y="5322">+    // init isWebWorker</tspan>

<tspan x="10" y="5338">+    local.isWebWorker = (</tspan>

<tspan x="10" y="5354">+        local.isBrowser &amp;&amp; typeof globalThis.importScript === "function"</tspan>

<tspan x="10" y="5370">     );</tspan>

<tspan x="10" y="5386">     // init function</tspan>

<tspan x="10" y="5402">-    local.assertThrow = function (passed, message) {</tspan>

<tspan x="10" y="5418">+    local.assertOrThrow = function (passed, message) {</tspan>

<tspan x="10" y="5434">     /*</tspan>

<tspan x="10" y="5450">-     * this function will throw error &lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="5466">+     * this function will throw err.&lt;message&gt; if &lt;passed&gt; is falsy</tspan>

<tspan x="10" y="5482">      */</tspan>

<tspan x="10" y="5498">-        var error;</tspan>

<tspan x="10" y="5514">+        let err;</tspan>

<tspan x="10" y="5530">         if (passed) {</tspan>

<tspan x="10" y="5546">             return;</tspan>

<tspan x="10" y="5562">         }</tspan>

<tspan x="10" y="5578">-        error = (</tspan>

<tspan x="10" y="5594">-            // ternary-condition</tspan>

<tspan x="10" y="5610">+        err = (</tspan>

<tspan x="10" y="5626">             (</tspan>

<tspan x="10" y="5642">                 message</tspan>

<tspan x="10" y="5658">                 &amp;&amp; typeof message.message === "string"</tspan>

<tspan x="10" y="5674">                 &amp;&amp; typeof message.stack === "string"</tspan>

<tspan x="10" y="5690">             )</tspan>

<tspan x="10" y="5706">-            // if message is an error-object, then leave it as is</tspan>

<tspan x="10" y="5722">+            // if message is errObj, then leave as is</tspan>

<tspan x="10" y="5738">             ? message</tspan>

<tspan x="10" y="5754">             : new Error(</tspan>

<tspan x="10" y="5770">                 typeof message === "string"</tspan>

<tspan x="10" y="5786">-                // if message is a string, then leave it as is</tspan>

<tspan x="10" y="5802">+                // if message is a string, then leave as is</tspan>

<tspan x="10" y="5818">                 ? message</tspan>

<tspan x="10" y="5834">                 // else JSON.stringify message</tspan>

<tspan x="10" y="5850">-                : JSON.stringify(message, null, 4)</tspan>

<tspan x="10" y="5866">+                : JSON.stringify(message, undefined, 4)</tspan>

<tspan x="10" y="5882">             )</tspan>

<tspan x="10" y="5898">         );</tspan>

<tspan x="10" y="5914">-        throw error;</tspan>

<tspan x="10" y="5930">+        throw err;</tspan>

<tspan x="10" y="5946">+    };</tspan>

<tspan x="10" y="5962">+    local.coalesce = function (...argList) {</tspan>

<tspan x="10" y="5978">+    /*</tspan>

<tspan x="10" y="5994">+     * this function will coalesce null, undefined, or "" in &lt;argList&gt;</tspan>

<tspan x="10" y="6010">+     */</tspan>

<tspan x="10" y="6026">+        let arg;</tspan>

<tspan x="10" y="6042">+        let ii;</tspan>

<tspan x="10" y="6058">+        ii = 0;</tspan>

<tspan x="10" y="6074">+        while (ii &lt; argList.length) {</tspan>

<tspan x="10" y="6090">+            arg = argList[ii];</tspan>

<tspan x="10" y="6106">+            if (arg !== null &amp;&amp; arg !== undefined &amp;&amp; arg !== "") {</tspan>

<tspan x="10" y="6122">+                break;</tspan>

<tspan x="10" y="6138">+            }</tspan>

<tspan x="10" y="6154">+            ii += 1;</tspan>

<tspan x="10" y="6170">+        }</tspan>

<tspan x="10" y="6186">+        return arg;</tspan>

<tspan x="10" y="6202">+    };</tspan>

<tspan x="10" y="6218">+    local.fsRmrfSync = function (dir) {</tspan>

<tspan x="10" y="6234">+    /*</tspan>

<tspan x="10" y="6250">+     * this function will sync "rm -rf" &lt;dir&gt;</tspan>

<tspan x="10" y="6266">+     */</tspan>

<tspan x="10" y="6282">+        let child_process;</tspan>

<tspan x="10" y="6298">+        try {</tspan>

<tspan x="10" y="6314">+            child_process = require("child_process");</tspan>

<tspan x="10" y="6330">+        } catch (ignore) {</tspan>

<tspan x="10" y="6346">+            return;</tspan>

<tspan x="10" y="6362">+        }</tspan>

<tspan x="10" y="6378">+        child_process.spawnSync("rm", [</tspan>

<tspan x="10" y="6394">+            "-rf", dir</tspan>

<tspan x="10" y="6410">+        ], {</tspan>

<tspan x="10" y="6426">+            stdio: [</tspan>

<tspan x="10" y="6442">+                "ignore", 1, 2</tspan>

<tspan x="10" y="6458">+            ]</tspan>

<tspan x="10" y="6474">+        });</tspan>

<tspan x="10" y="6490">+    };</tspan>

<tspan x="10" y="6506">+    local.fsWriteFileWithMkdirpSync = function (file, data) {</tspan>

<tspan x="10" y="6522">+    /*</tspan>

<tspan x="10" y="6538">+     * this function will sync write &lt;data&gt; to &lt;file&gt; with "mkdir -p"</tspan>

<tspan x="10" y="6554">+     */</tspan>

<tspan x="10" y="6570">+        let fs;</tspan>

<tspan x="10" y="6586">+        try {</tspan>

<tspan x="10" y="6602">+            fs = require("fs");</tspan>

<tspan x="10" y="6618">+        } catch (ignore) {</tspan>

<tspan x="10" y="6634">+            return;</tspan>

<tspan x="10" y="6650">+        }</tspan>

<tspan x="10" y="6666">+        // try to write file</tspan>

<tspan x="10" y="6682">+        try {</tspan>

<tspan x="10" y="6698">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="6714">+        } catch (ignore) {</tspan>

<tspan x="10" y="6730">+            // mkdir -p</tspan>

<tspan x="10" y="6746">+            require("child_process").spawnSync(</tspan>

<tspan x="10" y="6762">+                "mkdir",</tspan>

<tspan x="10" y="6778">+                [</tspan>

<tspan x="10" y="6794">+                    "-p", require("path").dirname(file)</tspan>

<tspan x="10" y="6810">+                ],</tspan>

<tspan x="10" y="6826">+                {</tspan>

<tspan x="10" y="6842">+                    stdio: [</tspan>

<tspan x="10" y="6858">+                        "ignore", 1, 2</tspan>

<tspan x="10" y="6874">+                    ]</tspan>

<tspan x="10" y="6890">+                }</tspan>

<tspan x="10" y="6906">+            );</tspan>

<tspan x="10" y="6922">+            // rewrite file</tspan>

<tspan x="10" y="6938">+            fs.writeFileSync(file, data);</tspan>

<tspan x="10" y="6954">+        }</tspan>

<tspan x="10" y="6970">     };</tspan>

<tspan x="10" y="6986">     local.functionOrNop = function (fnc) {</tspan>

<tspan x="10" y="7002">     /*</tspan>

<tspan x="10" y="7018">      * this function will if &lt;fnc&gt; exists,</tspan>

<tspan x="10" y="7034">-     * them return &lt;fnc&gt;,</tspan>

<tspan x="10" y="7050">+     * return &lt;fnc&gt;,</tspan>

<tspan x="10" y="7066">      * else return &lt;nop&gt;</tspan>

<tspan x="10" y="7082">      */</tspan>

<tspan x="10" y="7098">         return fnc || local.nop;</tspan>

<tspan x="10" y="7114">     };</tspan>

<tspan x="10" y="7130">-    local.identity = function (value) {</tspan>

<tspan x="10" y="7146">+    local.identity = function (val) {</tspan>

<tspan x="10" y="7162">     /*</tspan>

<tspan x="10" y="7178">-     * this function will return &lt;value&gt;</tspan>

<tspan x="10" y="7194">+     * this function will return &lt;val&gt;</tspan>

<tspan x="10" y="7210">      */</tspan>

<tspan x="10" y="7226">-        return value;</tspan>

<tspan x="10" y="7242">+        return val;</tspan>

<tspan x="10" y="7258">     };</tspan>

<tspan x="10" y="7274">     local.nop = function () {</tspan>

<tspan x="10" y="7290">     /*</tspan>

<tspan x="10" y="7306">@@ -103,11 +314,11 @@</tspan>

<tspan x="10" y="7322">     };</tspan>

<tspan x="10" y="7338">     local.objectAssignDefault = function (target, source) {</tspan>

<tspan x="10" y="7354">     /*</tspan>

<tspan x="10" y="7370">-     * this function will if items from &lt;target&gt; are</tspan>

<tspan x="10" y="7386">-     * null, undefined, or empty-string,</tspan>

<tspan x="10" y="7402">+     * this function will if items from &lt;target&gt; are null, undefined, or "",</tspan>

<tspan x="10" y="7418">      * then overwrite them with items from &lt;source&gt;</tspan>

<tspan x="10" y="7434">      */</tspan>

<tspan x="10" y="7450">-        Object.keys(source).forEach(function (key) {</tspan>

<tspan x="10" y="7466">+        target = target || {};</tspan>

<tspan x="10" y="7482">+        Object.keys(source || {}).forEach(function (key) {</tspan>

<tspan x="10" y="7498">             if (</tspan>

<tspan x="10" y="7514">                 target[key] === null</tspan>

<tspan x="10" y="7530">                 || target[key] === undefined</tspan>

<tspan x="10" y="7546">@@ -118,6 +329,26 @@</tspan>

<tspan x="10" y="7562">         });</tspan>

<tspan x="10" y="7578">         return target;</tspan>

<tspan x="10" y="7594">     };</tspan>

<tspan x="10" y="7610">+    local.querySelector = function (selectors) {</tspan>

<tspan x="10" y="7626">+    /*</tspan>

<tspan x="10" y="7642">+     * this function will return first dom-elem that match &lt;selectors&gt;</tspan>

<tspan x="10" y="7658">+     */</tspan>

<tspan x="10" y="7674">+        return (</tspan>

<tspan x="10" y="7690">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="7706">+            &amp;&amp; typeof document.querySelector === "function"</tspan>

<tspan x="10" y="7722">+            &amp;&amp; document.querySelector(selectors)</tspan>

<tspan x="10" y="7738">+        ) || {};</tspan>

<tspan x="10" y="7754">+    };</tspan>

<tspan x="10" y="7770">+    local.querySelectorAll = function (selectors) {</tspan>

<tspan x="10" y="7786">+    /*</tspan>

<tspan x="10" y="7802">+     * this function will return dom-elem-list that match &lt;selectors&gt;</tspan>

<tspan x="10" y="7818">+     */</tspan>

<tspan x="10" y="7834">+        return (</tspan>

<tspan x="10" y="7850">+            typeof document === "object" &amp;&amp; document</tspan>

<tspan x="10" y="7866">+            &amp;&amp; typeof document.querySelectorAll === "function"</tspan>

<tspan x="10" y="7882">+            &amp;&amp; Array.from(document.querySelectorAll(selectors))</tspan>

<tspan x="10" y="7898">+        ) || [];</tspan>

<tspan x="10" y="7914">+    };</tspan>

<tspan x="10" y="7930">     // require builtin</tspan>

<tspan x="10" y="7946">     if (!local.isBrowser) {</tspan>

<tspan x="10" y="7962">         local.assert = require("assert");</tspan>

<tspan x="10" y="7978">@@ -148,7 +379,10 @@</tspan>

<tspan x="10" y="7994">         local.vm = require("vm");</tspan>

<tspan x="10" y="8010">         local.zlib = require("zlib");</tspan>

<tspan x="10" y="8026">     }</tspan>

<tspan x="10" y="8042">-}(this));</tspan>

<tspan x="10" y="8058">+}((typeof globalThis === "object" &amp;&amp; globalThis) || (function () {</tspan>

<tspan x="10" y="8074">+    return Function("return this")(); // jslint ignore:line</tspan>

<tspan x="10" y="8090">+}())));</tspan>

<tspan x="10" y="8106">+// assets.utility2.header.js - end</tspan>

<tspan x="10" y="8122"> </tspan>

<tspan x="10" y="8138"> </tspan>

<tspan x="10" y="8154"> </tspan>

<tspan x="10" y="8170">@@ -198,7 +432,4 @@</tspan>

<tspan x="10" y="8186">     );</tspan>

<tspan x="10" y="8202"> });</tspan>

<tspan x="10" y="8218"> }());</tspan>

<tspan x="10" y="8234">-</tspan>

<tspan x="10" y="8250">-</tspan>

<tspan x="10" y="8266">-</tspan>

<tspan x="10" y="8282"> }());</tspan>

<tspan x="10" y="8298">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.b\</tspan>
<tspan x="10" y="8314">ootstrap.js</tspan>

<tspan x="10" y="8330">jslint - 195ms /tmp/npmTestPublished/node_modules/bootstrap-lite/lib.bootstrap.js</tspan>

<tspan x="10" y="8346">jslint - 1ms /tmp/npmTestPublished/node_modules/bootstrap-lite/npm_scripts.sh</tspan>

<tspan x="10" y="8362">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js.autofix.old	2020-01-20 21:59:19.23\</tspan>
<tspan x="10" y="8378">6845497 +0000</tspan>

<tspan x="10" y="8394">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js	2020-01-20 21:59:19.236845497 +000\</tspan>
<tspan x="10" y="8410">0</tspan>

<tspan x="10" y="8426">@@ -172,13 +172,15 @@</tspan>

<tspan x="10" y="8442">     local.testCase_buildLib_default(option, local.onErrorThrow);</tspan>

<tspan x="10" y="8458">     local.testCase_buildTest_default(option, local.onErrorThrow);</tspan>

<tspan x="10" y="8474">     option = {</tspan>

<tspan x="10" y="8490">-        assetsList: [{</tspan>

<tspan x="10" y="8506">-            file: "/assets.bootstrap-v3.4.0.rollup.min.css",</tspan>

<tspan x="10" y="8522">-            url: "/assets.bootstrap-v3.4.0.rollup.min.css"</tspan>

<tspan x="10" y="8538">-        }, {</tspan>

<tspan x="10" y="8554">-            file: "/assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="8570">-            url: "/assets.bootstrap-v3.4.0.rollup.min.js"</tspan>

<tspan x="10" y="8586">-        }]</tspan>

<tspan x="10" y="8602">+        assetsList: [</tspan>

<tspan x="10" y="8618">+            {</tspan>

<tspan x="10" y="8634">+                file: "/assets.bootstrap-v3.4.0.rollup.min.css",</tspan>

<tspan x="10" y="8650">+                url: "/assets.bootstrap-v3.4.0.rollup.min.css"</tspan>

<tspan x="10" y="8666">+            }, {</tspan>

<tspan x="10" y="8682">+                file: "/assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="8698">+                url: "/assets.bootstrap-v3.4.0.rollup.min.js"</tspan>

<tspan x="10" y="8714">+            }</tspan>

<tspan x="10" y="8730">+        ]</tspan>

<tspan x="10" y="8746">     };</tspan>

<tspan x="10" y="8762">     local.buildApp(option, onError);</tspan>

<tspan x="10" y="8778"> };</tspan>

<tspan x="10" y="8794">@@ -194,9 +196,11 @@</tspan>

<tspan x="10" y="8810">     option = {};</tspan>

<tspan x="10" y="8826">     option.customize = function () {</tspan>

<tspan x="10" y="8842">         // search-and-replace - customize dataTo</tspan>

<tspan x="10" y="8858">-        [(</tspan>

<tspan x="10" y="8874">-            /\n\/\* jslint ignore:start \*\/\nlocal.assetsDict\["\/assets.index.template.html"\\</tspan>
<tspan x="10" y="8890">] = '\\\n[\S\s]*?\n\/\* jslint ignore:end \*\/\n/</tspan>

<tspan x="10" y="8906">-        )].forEach(function (rgx) {</tspan>

<tspan x="10" y="8922">+        [</tspan>

<tspan x="10" y="8938">+            (</tspan>

<tspan x="10" y="8954">+                /\n\/\* jslint ignore:start \*\/\nlocal.assetsDict\["\/assets.index.template.ht\</tspan>
<tspan x="10" y="8970">ml"\] = '\\\n[\S\s]*?\n\/\* jslint ignore:end \*\/\n/</tspan>

<tspan x="10" y="8986">+            )</tspan>

<tspan x="10" y="9002">+        ].forEach(function (rgx) {</tspan>

<tspan x="10" y="9018">             option.dataFrom.replace(rgx, function (match0) {</tspan>

<tspan x="10" y="9034">                 option.dataTo = option.dataTo.replace(rgx, match0);</tspan>

<tspan x="10" y="9050">             });</tspan>

<tspan x="10" y="9066">@@ -205,7 +209,4 @@</tspan>

<tspan x="10" y="9082">     local.buildReadme(option, onError);</tspan>

<tspan x="10" y="9098"> };</tspan>

<tspan x="10" y="9114"> }());</tspan>

<tspan x="10" y="9130">-</tspan>

<tspan x="10" y="9146">-</tspan>

<tspan x="10" y="9162">-</tspan>

<tspan x="10" y="9178"> }());</tspan>

<tspan x="10" y="9194">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/test.\</tspan>
<tspan x="10" y="9210">js</tspan>

<tspan x="10" y="9226">jslint /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js</tspan>

<tspan x="10" y="9242">  1 Unexpected '.'. // line 153, column 53</tspan>

<tspan x="10" y="9258">    local = (globalThis.utility2 || require("utility2")).requireReadme();</tspan>

<tspan x="10" y="9274">{</tspan>

<tspan x="10" y="9290">    "name": "JSLintError",</tspan>

<tspan x="10" y="9306">    "column": 53,</tspan>

<tspan x="10" y="9322">    "line": 153,</tspan>

<tspan x="10" y="9338">    "code": "unexpected_a",</tspan>

<tspan x="10" y="9354">    "a": ".",</tspan>

<tspan x="10" y="9370">    "b": null,</tspan>

<tspan x="10" y="9386">    "message": "Unexpected '.'.",</tspan>

<tspan x="10" y="9402">    "source": "local = (globalThis.utility2 || require(\"utility2\")).requireReadme();",</tspan>

<tspan x="10" y="9418">    "ignore": null,</tspan>

<tspan x="10" y="9434">    "evidence": "local = (globalThis.utility2 || require(\"utility2\")).requireReadme();"</tspan>

<tspan x="10" y="9450">}</tspan>

<tspan x="10" y="9466">Error</tspan>

<tspan x="10" y="9482">    at warn_at_extra (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/li\</tspan>
<tspan x="10" y="9498">b.jslint.js:16680:42)</tspan>

<tspan x="10" y="9514">    at warn_at (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jsli\</tspan>
<tspan x="10" y="9530">nt.js:11961:12)</tspan>

<tspan x="10" y="9546">    at warn (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.\</tspan>
<tspan x="10" y="9562">js:11983:29)</tspan>

<tspan x="10" y="9578">    at left_check (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.j\</tspan>
<tspan x="10" y="9594">slint.js:13642:9)</tspan>

<tspan x="10" y="9610">    at /tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint.js:140\</tspan>
<tspan x="10" y="9626">17:9</tspan>

<tspan x="10" y="9642">    at Object.the_symbol.led (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/uti\</tspan>
<tspan x="10" y="9658">lity2/lib.jslint.js:13729:20)</tspan>

<tspan x="10" y="9674">    at right (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint\</tspan>
<tspan x="10" y="9690">.js:13328:31)</tspan>

<tspan x="10" y="9706">    at expression (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.j\</tspan>
<tspan x="10" y="9722">slint.js:13331:6)</tspan>

<tspan x="10" y="9738">    at Object.the_symbol.led (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/uti\</tspan>
<tspan x="10" y="9754">lity2/lib.jslint.js:13676:17)</tspan>

<tspan x="10" y="9770">    at right (/tmp/npmTestPublished/node_modules/bootstrap-lite/node_modules/utility2/lib.jslint\</tspan>
<tspan x="10" y="9786">.js:13328:31)</tspan>

<tspan x="10" y="9802">jslint - 192ms /tmp/npmTestPublished/node_modules/bootstrap-lite/test.js</tspan>

<tspan x="10" y="9818">--- /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json.autofix.old	2020-01-20 21:59:\</tspan>
<tspan x="10" y="9834">19.276845497 +0000</tspan>

<tspan x="10" y="9850">+++ /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json	2020-01-20 21:59:19.276845497\</tspan>
<tspan x="10" y="9866"> +0000</tspan>

<tspan x="10" y="9882">@@ -1,71 +1,71 @@</tspan>

<tspan x="10" y="9898"> {</tspan>

<tspan x="10" y="9914">-  "_from": "bootstrap-lite",</tspan>

<tspan x="10" y="9930">-  "_id": "bootstrap-lite@2019.1.30",</tspan>

<tspan x="10" y="9946">-  "_inBundle": false,</tspan>

<tspan x="10" y="9962">-  "_integrity": "sha512-t3F6+b5OLY0tUJ4qYYzwrjKc8QPdZZM7nphNHvYQYoUNnnVtZi6H7dcb+ajBdHLVU6fufW0\</tspan>
<tspan x="10" y="9978">5rgJj2k5d00qpvA==",</tspan>

<tspan x="10" y="9994">-  "_location": "/bootstrap-lite",</tspan>

<tspan x="10" y="10010">-  "_phantomChildren": {},</tspan>

<tspan x="10" y="10026">-  "_requested": {</tspan>

<tspan x="10" y="10042">-    "type": "tag",</tspan>

<tspan x="10" y="10058">-    "registry": true,</tspan>

<tspan x="10" y="10074">-    "raw": "bootstrap-lite",</tspan>

<tspan x="10" y="10090">+    "_from": "bootstrap-lite",</tspan>

<tspan x="10" y="10106">+    "_id": "bootstrap-lite@2019.1.30",</tspan>

<tspan x="10" y="10122">+    "_inBundle": false,</tspan>

<tspan x="10" y="10138">+    "_integrity": "sha512-t3F6+b5OLY0tUJ4qYYzwrjKc8QPdZZM7nphNHvYQYoUNnnVtZi6H7dcb+ajBdHLVU6fuf\</tspan>
<tspan x="10" y="10154">W05rgJj2k5d00qpvA==",</tspan>

<tspan x="10" y="10170">+    "_location": "/bootstrap-lite",</tspan>

<tspan x="10" y="10186">+    "_phantomChildren": {},</tspan>

<tspan x="10" y="10202">+    "_requested": {</tspan>

<tspan x="10" y="10218">+        "escapedName": "bootstrap-lite",</tspan>

<tspan x="10" y="10234">+        "fetchSpec": "latest",</tspan>

<tspan x="10" y="10250">+        "name": "bootstrap-lite",</tspan>

<tspan x="10" y="10266">+        "raw": "bootstrap-lite",</tspan>

<tspan x="10" y="10282">+        "rawSpec": "",</tspan>

<tspan x="10" y="10298">+        "registry": true,</tspan>

<tspan x="10" y="10314">+        "saveSpec": null,</tspan>

<tspan x="10" y="10330">+        "type": "tag"</tspan>

<tspan x="10" y="10346">+    },</tspan>

<tspan x="10" y="10362">+    "_requiredBy_": [</tspan>

<tspan x="10" y="10378">+        "#USER",</tspan>

<tspan x="10" y="10394">+        "/"</tspan>

<tspan x="10" y="10410">+    ],</tspan>

<tspan x="10" y="10426">+    "_resolved": "https://registry.npmjs.org/bootstrap-lite/-/bootstrap-lite-2019.1.30.tgz",</tspan>

<tspan x="10" y="10442">+    "_shasum": "dd076017abe5fa1be7e22f966ec6ce418cc015b6",</tspan>

<tspan x="10" y="10458">+    "_spec": "bootstrap-lite",</tspan>

<tspan x="10" y="10474">+    "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="10490">+    "assetsList": "assets.bootstrap-v3.4.0.rollup.min.css assets.bootstrap-v3.4.0.rollup.min.js\</tspan>
<tspan x="10" y="10506">",</tspan>

<tspan x="10" y="10522">+    "author": {</tspan>

<tspan x="10" y="10538">+        "email": "kaizhu256@gmail.com",</tspan>

<tspan x="10" y="10554">+        "name": "kai zhu"</tspan>

<tspan x="10" y="10570">+    },</tspan>

<tspan x="10" y="10586">+    "bugs": {</tspan>

<tspan x="10" y="10602">+        "url": "https://github.com/kaizhu256/node-bootstrap-lite/issues"</tspan>

<tspan x="10" y="10618">+    },</tspan>

<tspan x="10" y="10634">+    "bundleDependencies": false,</tspan>

<tspan x="10" y="10650">+    "deprecated": false,</tspan>

<tspan x="10" y="10666">+    "description": "this zero-dependency package will provide 1) a rolled-up css (includes glyp\</tspan>
<tspan x="10" y="10682">hicons and theme), and 2) a rolled-up js (includes jquery) of twitter-bootstrap (v3.4.0), with a\</tspan>
<tspan x="10" y="10698"> working web-demo",</tspan>

<tspan x="10" y="10714">+    "devDependencies": {</tspan>

<tspan x="10" y="10730">+        "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="10746">+        "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="10762">+    },</tspan>

<tspan x="10" y="10778">+    "engines": {</tspan>

<tspan x="10" y="10794">+        "node": "&gt;=10.0"</tspan>

<tspan x="10" y="10810">+    },</tspan>

<tspan x="10" y="10826">+    "homepage": "https://github.com/kaizhu256/node-bootstrap-lite",</tspan>

<tspan x="10" y="10842">+    "keywords": [],</tspan>

<tspan x="10" y="10858">+    "license": "MIT",</tspan>

<tspan x="10" y="10874">+    "main": "lib.bootstrap.js",</tspan>

<tspan x="10" y="10890">     "name": "bootstrap-lite",</tspan>

<tspan x="10" y="10906">-    "escapedName": "bootstrap-lite",</tspan>

<tspan x="10" y="10922">-    "rawSpec": "",</tspan>

<tspan x="10" y="10938">-    "saveSpec": null,</tspan>

<tspan x="10" y="10954">-    "fetchSpec": "latest"</tspan>

<tspan x="10" y="10970">-  },</tspan>

<tspan x="10" y="10986">-  "_requiredBy_": [</tspan>

<tspan x="10" y="11002">-    "#USER",</tspan>

<tspan x="10" y="11018">-    "/"</tspan>

<tspan x="10" y="11034">-  ],</tspan>

<tspan x="10" y="11050">-  "_resolved": "https://registry.npmjs.org/bootstrap-lite/-/bootstrap-lite-2019.1.30.tgz",</tspan>

<tspan x="10" y="11066">-  "_shasum": "dd076017abe5fa1be7e22f966ec6ce418cc015b6",</tspan>

<tspan x="10" y="11082">-  "_spec": "bootstrap-lite",</tspan>

<tspan x="10" y="11098">-  "_where": "/tmp/npmTestPublished",</tspan>

<tspan x="10" y="11114">-  "assetsList": "assets.bootstrap-v3.4.0.rollup.min.css assets.bootstrap-v3.4.0.rollup.min.js",</tspan>

<tspan x="10" y="11130">-  "author": {</tspan>

<tspan x="10" y="11146">-    "name": "kai zhu",</tspan>

<tspan x="10" y="11162">-    "email": "kaizhu256@gmail.com"</tspan>

<tspan x="10" y="11178">-  },</tspan>

<tspan x="10" y="11194">-  "bugs": {</tspan>

<tspan x="10" y="11210">-    "url": "https://github.com/kaizhu256/node-bootstrap-lite/issues"</tspan>

<tspan x="10" y="11226">-  },</tspan>

<tspan x="10" y="11242">-  "bundleDependencies": false,</tspan>

<tspan x="10" y="11258">-  "deprecated": false,</tspan>

<tspan x="10" y="11274">-  "description": "this zero-dependency package will provide 1) a rolled-up css (includes glyphi\</tspan>
<tspan x="10" y="11290">cons and theme), and 2) a rolled-up js (includes jquery) of twitter-bootstrap (v3.4.0), with a w\</tspan>
<tspan x="10" y="11306">orking web-demo",</tspan>

<tspan x="10" y="11322">-  "devDependencies": {</tspan>

<tspan x="10" y="11338">-    "electron-lite": "github:kaizhu256/node-electron-lite#alpha",</tspan>

<tspan x="10" y="11354">-    "utility2": "github:kaizhu256/node-utility2#alpha"</tspan>

<tspan x="10" y="11370">-  },</tspan>

<tspan x="10" y="11386">-  "engines": {</tspan>

<tspan x="10" y="11402">-    "node": "&gt;=10.0"</tspan>

<tspan x="10" y="11418">-  },</tspan>

<tspan x="10" y="11434">-  "homepage": "https://github.com/kaizhu256/node-bootstrap-lite",</tspan>

<tspan x="10" y="11450">-  "keywords": [],</tspan>

<tspan x="10" y="11466">-  "license": "MIT",</tspan>

<tspan x="10" y="11482">-  "main": "lib.bootstrap.js",</tspan>

<tspan x="10" y="11498">-  "name": "bootstrap-lite",</tspan>

<tspan x="10" y="11514">-  "nameAliasPublish": "bootstrap-classic bootstrap3-lite",</tspan>

<tspan x="10" y="11530">-  "nameLib": "bootstrap",</tspan>

<tspan x="10" y="11546">-  "nameOriginal": "bootstrap-lite",</tspan>

<tspan x="10" y="11562">-  "os": [</tspan>

<tspan x="10" y="11578">-    "darwin",</tspan>

<tspan x="10" y="11594">-    "linux"</tspan>

<tspan x="10" y="11610">-  ],</tspan>

<tspan x="10" y="11626">-  "repository": {</tspan>

<tspan x="10" y="11642">-    "type": "git",</tspan>

<tspan x="10" y="11658">-    "url": "git+https://github.com/kaizhu256/node-bootstrap-lite.git"</tspan>

<tspan x="10" y="11674">-  },</tspan>

<tspan x="10" y="11690">-  "scripts": {</tspan>

<tspan x="10" y="11706">-    "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11722">-    "env": "env",</tspan>

<tspan x="10" y="11738">-    "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11754">-    "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11770">-    "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11786">-    "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11802">-    "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="11818">-    "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="11834">-  },</tspan>

<tspan x="10" y="11850">-  "version": "2019.1.30"</tspan>

<tspan x="10" y="11866">+    "nameAliasPublish": "bootstrap-classic bootstrap3-lite",</tspan>

<tspan x="10" y="11882">+    "nameLib": "bootstrap",</tspan>

<tspan x="10" y="11898">+    "nameOriginal": "bootstrap-lite",</tspan>

<tspan x="10" y="11914">+    "os": [</tspan>

<tspan x="10" y="11930">+        "darwin",</tspan>

<tspan x="10" y="11946">+        "linux"</tspan>

<tspan x="10" y="11962">+    ],</tspan>

<tspan x="10" y="11978">+    "repository": {</tspan>

<tspan x="10" y="11994">+        "type": "git",</tspan>

<tspan x="10" y="12010">+        "url": "git+https://github.com/kaizhu256/node-bootstrap-lite.git"</tspan>

<tspan x="10" y="12026">+    },</tspan>

<tspan x="10" y="12042">+    "scripts": {</tspan>

<tspan x="10" y="12058">+        "build-ci": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12074">+        "env": "env",</tspan>

<tspan x="10" y="12090">+        "eval": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12106">+        "heroku-postbuild": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12122">+        "postinstall": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12138">+        "start": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12154">+        "test": "./npm_scripts.sh",</tspan>

<tspan x="10" y="12170">+        "utility2": "./npm_scripts.sh"</tspan>

<tspan x="10" y="12186">+    },</tspan>

<tspan x="10" y="12202">+    "version": "2019.1.30"</tspan>

<tspan x="10" y="12218"> }</tspan>

<tspan x="10" y="12234">jslint-autofix - modified and saved file /tmp/npmTestPublished/node_modules/bootstrap-lite/packa\</tspan>
<tspan x="10" y="12250">ge.json</tspan>

<tspan x="10" y="12266">jslint - 20ms /tmp/npmTestPublished/node_modules/bootstrap-lite/package.json</tspan>

<tspan x="10" y="12282"></tspan>

<tspan x="10" y="12298">DevTools listening on ws://127.0.0.1:45991/devtools/browser/769ad8ca-f467-42f9-9c7c-3318a6316130</tspan>

<tspan x="10" y="12314">[0120/215919.587194:ERROR:command_buffer_proxy_impl.cc(124)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="12330">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="12346">[0120/215919.587079:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="12362">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="12378">[0120/215919.589998:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="12394">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="12410">[0120/215919.594954:ERROR:command_buffer_proxy_impl.cc(124)] ContextResult::kTransientFailure: F\</tspan>
<tspan x="10" y="12426">ailed to send GpuChannelMsg_CreateCommandBuffer.</tspan>

<tspan x="10" y="12442">[0120/215919.594926:WARNING:ipc_message_attachment_set.cc(49)] MessageAttachmentSet destroyed wi\</tspan>
<tspan x="10" y="12458">th unconsumed attachments: 0/1</tspan>

<tspan x="10" y="12474">http-server listening on port 63086</tspan>

<tspan x="10" y="12490">testRunDefault - 1365 ms - [node test-case 6 of 7 passed] - testCase_webpage_default</tspan>

<tspan x="10" y="12506">testRunDefault - 5805 ms - [node test-case 7 of 7 passed] - testCase_buildApp_default</tspan>

<tspan x="10" y="12522">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="12538">File                   |   % Stmts |% Branches |   % Funcs |   % Lines |</tspan>

<tspan x="10" y="12554">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="12570">   bootstrap-lite/     |     98.59 |      98.5 |       100 |     98.59 |</tspan>

<tspan x="10" y="12586">      example.js       |       100 |       100 |       100 |       100 |</tspan>

<tspan x="10" y="12602">      lib.bootstrap.js |       100 |       100 |       100 |       100 |</tspan>

<tspan x="10" y="12618">      test.js          |      95.6 |     93.94 |       100 |      95.6 |</tspan>

<tspan x="10" y="12634">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="12650">All files              |     98.59 |      98.5 |       100 |     98.59 |</tspan>

<tspan x="10" y="12666">-----------------------|-----------|-----------|-----------|-----------|</tspan>

<tspan x="10" y="12682"></tspan>

<tspan x="10" y="12698">created coverage file /tmp/npmTestPublished/node_modules/bootstrap-lite/tmp/build/coverage.html/\</tspan>
<tspan x="10" y="12714">index.html</tspan>

<tspan x="10" y="12730"></tspan>

<tspan x="10" y="12746">-------------------------------------------------------</tspan>

<tspan x="10" y="12762">| test-report - npmTestPublished - node - linux v13.6.0 - 2020-01-20T21:59:18.407Z</tspan>

<tspan x="10" y="12778">|    5806 ms            0 failed        7 passed      |</tspan>

<tspan x="10" y="12794">-------------------------------------------------------</tspan>

<tspan x="10" y="12810"></tspan>

<tspan x="10" y="12826">created test-report file /tmp/npmTestPublished/node_modules/bootstrap-lite/tmp/build/test-report\</tspan>
<tspan x="10" y="12842">.html</tspan>

<tspan x="10" y="12858"></tspan>

<tspan x="10" y="12874"></tspan>

<tspan x="10" y="12890">npmTestPublished - 0 failed tests</tspan>

<tspan x="10" y="12906"></tspan>

<tspan x="10" y="12922"></tspan>

<tspan x="10" y="12938">\x1b[35m[MODE_BUILD=npmTestPublished]\x1b[0m - 2020-01-20T21:59:24.731Z - EXIT_CODE - 0</tspan>

</text>
</svg>
